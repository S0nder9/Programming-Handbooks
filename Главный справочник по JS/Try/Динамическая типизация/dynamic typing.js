// Динамическая типизация в JavaScript

// Динамическая типизация в JavaScript означает, что тип данных переменной определяется автоматически во время выполнения программы.

// Примеры динамической типизации:

// Присвоение переменной разных типов данных:
let variable = 10; // переменная 'variable' теперь содержит число
variable = 'Hello'; // теперь 'variable' содержит строку
variable = true; // теперь 'variable' содержит логическое значение

// Автоматическое преобразование типов данных:
let num = 10;
let str = '5';

let result = num + str; // результат будет строка '105', так как произойдет преобразование числа в строку и конкатенация строк

// Унарный оператор плюс также может использоваться для преобразования строки в число:
let numberStr = '10';
let convertedNum = +numberStr; // преобразование строки в число

// Типы данных в JavaScript могут изменяться динамически в процессе выполнения программы в зависимости от операций, выполняемых с переменными.

// Динамическая типизация обеспечивает гибкость и удобство в использовании, но также может привести к неожиданным результатам и ошибкам при неправильном использовании.

// Примеры динамической типизации в выражениях:
let x = 10;
let y = '5';

let resultMain = x + y; // результат будет строка '105', так как число будет преобразовано в строку и произойдет конкатенация

// Примеры явного преобразования типов:
let a = '10';
let b = '5';

let sum = Number(a) + Number(b); // явное преобразование строк в числа для выполнения арифметической операции

// Использование различных методов преобразования типов данных в JavaScript может помочь контролировать и управлять динамической типизацией.

// Конец файла
