// Подглава 6.3: Асинхронные функции async

// Асинхронные функции async
/*
Асинхронные функции (async functions) - это специальный вид функций в JavaScript, который позволяет писать асинхронный код с использованием синтаксиса, 
похожего на синхронный код. Они упрощают работу с асинхронными операциями и улучшают читаемость кода.
*/

// Пример асинхронной функции
async function fetchDataAsync() {
    return new Promise((resolve, reject) => {
        setTimeout(() => {
            const data = "Данные с сервера";
            resolve(data);
        }, 2000);
    });
}

// Использование асинхронной функции
async function processDataAsync() {
    try {
        const data = await fetchDataAsync(); // Ожидание выполнения промиса
        console.log("Данные успешно получены:", data);
        return data;
    } catch (error) {
        console.error("Ошибка при получении данных:", error);
        throw error; // Пробрасываем ошибку дальше
    }
}

processDataAsync()
    .then(result => {
        console.log("Результат обработки данных:", result);
    })
    .catch(error => {
        console.error("Ошибка при обработке данных:", error);
    });

/*
В этом примере создается асинхронная функция fetchDataAsync, которая возвращает промис с данными с сервера. 
Затем создается асинхронная функция processDataAsync, которая ожидает выполнение промиса с помощью ключевого слова await. 
После получения данных она обрабатывает их и возвращает результат.
*/

/*
Ключевое слово await можно использовать только внутри асинхронных функций. 
Оно приостанавливает выполнение функции до тех пор, пока переданный промис не выполнится или не отклонится. 
Это позволяет писать асинхронный код, который выглядит как синхронный, что делает его более понятным и удобным в использовании.
*/
