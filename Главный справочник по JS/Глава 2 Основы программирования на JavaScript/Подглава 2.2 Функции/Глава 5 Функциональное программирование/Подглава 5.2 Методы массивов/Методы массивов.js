// Подглава 5.2: Методы массивов

// map()
/*
Метод map() применяет функцию к каждому элементу массива и возвращает новый массив с результатами выполнения этой функции.
*/

// Пример использования метода map()
const numbers1 = [1, 2, 3, 4, 5];
const squaredNumbers = numbers1.map(num => num * num);

console.log(squaredNumbers); // Выведет: [1, 4, 9, 16, 25]

/*
Этот пример демонстрирует использование метода map() для возведения каждого элемента массива в квадрат. 
Новый массив squaredNumbers содержит результаты выполнения этой операции.
*/

// filter()
/*
Метод filter() создает новый массив, содержащий только элементы исходного массива, для которых функция возвращает true.
*/

// Пример использования метода filter()
const numbers2 = [1, 2, 3, 4, 5];
const evenNumbers = numbers2.filter(num => num % 2 === 0);

console.log(evenNumbers); // Выведет: [2, 4]

/*
Этот пример демонстрирует использование метода filter() для фильтрации только четных чисел из массива numbers. 
Новый массив evenNumbers содержит только элементы, которые являются четными.
*/

// reduce()
/*
Метод reduce() применяет функцию к аккумулятору и каждому значению массива (слева направо), сводя его к одному значению.
*/

// Пример использования метода reduce()
const numbers3 = [1, 2, 3, 4, 5];
const sum = numbers3.reduce((accumulator, currentValue) => accumulator + currentValue, 0);

console.log(sum); // Выведет: 15

/*
Этот пример демонстрирует использование метода reduce() для вычисления суммы всех элементов массива numbers. 
Изначальное значение аккумулятора установлено на 0, затем к нему последовательно добавляются все элементы массива.
*/
