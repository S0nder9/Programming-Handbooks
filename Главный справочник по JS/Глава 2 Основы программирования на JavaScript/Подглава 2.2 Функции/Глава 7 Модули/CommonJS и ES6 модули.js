// Подглава 7.2: CommonJS и ES6 модули

// Различия между CommonJS и ES6 модулями
/*
CommonJS и ES6 (или ECMAScript 2015) - это два различных стандарта модулей в JavaScript.
CommonJS - это стандарт модулей, который используется в среде Node.js. Он предоставляет способы экспорта и импорта модулей с помощью require() и module.exports.
ES6 модули - это стандарт модулей, определенный в ECMAScript 2015 (ES6). Он предоставляет новый синтаксис для экспорта и импорта модулей с помощью ключевых слов export и import.
Основные различия между CommonJS и ES6 модулями:
1. Синтаксис: CommonJS использует функции require() и module.exports, в то время как ES6 модули используют ключевые слова import и export.
2. Время загрузки: CommonJS модули загружаются синхронно во время выполнения, в то время как ES6 модули могут быть загружены асинхронно во время компиляции.
3. Область видимости: CommonJS модули имеют отдельную область видимости для каждого модуля, в то время как ES6 модули имеют статическую область видимости.
*/

// Преимущества использования ES6 модулей
/*
Преимущества использования ES6 модулей:
1. Единообразие: ES6 модули обеспечивают единообразный и стандартизированный способ организации кода.
2. Статическая анализируемость: Благодаря статической области видимости ES6 модули позволяют статическому анализатору кода оптимизировать загрузку модулей.
3. Асинхронная загрузка: ES6 модули могут быть загружены асинхронно во время компиляции, что повышает производительность приложения.
4. Встроенная поддержка: Большинство современных браузеров и сред разработки JavaScript поддерживают ES6 модули из коробки.
*/

// Пример использования ES6 модулей
// math.js
export const add = (a, b) => a + b;
export const subtract = (a, b) => a - b;

// main.js
import { add, subtract } from "./math.js";

console.log(add(2, 3)); // Выведет: 5
console.log(subtract(5, 2)); // Выведет: 3

/*
В этом примере модуль math.js экспортирует функции add и subtract с помощью ключевого слова export, а модуль main.js импортирует их с помощью ключевого слова import.
*/
