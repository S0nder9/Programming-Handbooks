// Подглава 1.2: Объявление функций

// Объявление функций с помощью function declaration
function greet(name) {
    console.log("Привет, " + name + "!");
}

greet("Миша"); // Выведет: Привет, Миша!

/*
Function Declaration (Объявление функции) - это способ объявления функций в JavaScript, 
когда функция определяется с использованием ключевого слова 'function' в начале строки кода. 
Этот тип объявления позволяет использовать функцию до ее объявления (всплытие функции).
*/

// Объявление функций с помощью function expression
const greetFunc = function(name) {
    console.log("Привет, " + name + "!");
};

greetFunc("Катя"); // Выведет: Привет, Катя!

/*
Function Expression (Функциональное выражение) - это способ определения функции в JavaScript 
путем присвоения функции переменной. 
Функция, определенная таким образом, доступна только после того, как она была присвоена переменной. 
Это означает, что она не может быть вызвана до своего определения.
*/

// Стрелочные функции
const square = (x) => {
    return x * x;
};

console.log(square(5)); // Выведет: 25

/*
Стрелочные функции (Arrow Functions) - это синтаксическое сокращение для определения функций в JavaScript. 
Они предоставляют более краткую и удобную форму записи, особенно для простых функций. 
Стрелочные функции не имеют собственного контекста ('this'), 
что означает, что они наследуют контекст окружающего кода, в котором они были определены.
*/

// Стрелочные функции с неявным возвратом (если функция состоит из одной инструкции)
const cube = (x) => x * x * x;

console.log(cube(3)); // Выведет: 27

/*
Стрелочные функции также могут быть определены в более краткой форме, 
если они содержат только одну инструкцию. 
В таком случае можно опустить фигурные скобки и ключевое слово 'return', 
а значение будет автоматически возвращено.
Пример:
*/

// Стрелочные функции с неявным возвратом (если функция состоит из одной инструкции)
const double = (x) => x * 2;

console.log(double(4)); // Выведет: 8

/*
В данном примере функция double принимает аргумент x и возвращает его удвоенным значением. 
Так как функция состоит только из одной инструкции - умножения на 2, 
то фигурные скобки и ключевое слово 'return' можно опустить, 
и значение будет автоматически возвращено.
*/

