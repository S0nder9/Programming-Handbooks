// Функция для выполнения GET-запроса к API
async function fetchData(url) {
    try {
        const response = await fetch(url); // Ожидание получения ответа от сервера
        if (!response.ok) { // Проверка успешности запроса
            throw new Error('Ошибка загрузки данных: ' + response.status);
        }
        const data = await response.json(); // Ожидание преобразования ответа в формат JSON
        return data; // Возвращаем полученные данные
    } catch (error) {
        console.error('Произошла ошибка:', error.message);
        // Обработка ошибки, например, вывод сообщения об ошибке на страницу или другие действия
    }
}

// Пример использования
async function fetchDataExample() {
    const apiUrl = 'https://api.example.com/data'; // Замените URL на адрес вашего API
    try {
        const data = await fetchData(apiUrl); // Ожидание загрузки данных
        console.log('Полученные данные:', data);
        // Дальнейшая обработка полученных данных
    } catch (error) {
        console.error('Произошла ошибка при загрузке данных:', error);
    }
}

// Вызов функции для загрузки данных
fetchDataExample();

// В этом примере асинхронная функция fetchData() выполняет GET-запрос к указанному URL.
// Затем она обрабатывает полученный ответ, проверяя его статус и преобразуя в формат JSON. Если запрос выполнен успешно, функция возвращает полученные данные. Если произошла ошибка во время запроса или обработки данных, функция генерирует исключение, 
// которое затем обрабатывается в блоке catch.