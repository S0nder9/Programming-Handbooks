// Подглава 4.3: Тестирование и отладка условий

// Написание тестов для условных операторов
// Для тестирования условных операторов можно использовать различные тестовые фреймворки, такие как Jest, Mocha, Jasmine и другие.

// Пример (используя Jest):
test("Проверка условия", () => {
    const value = 10;
    expect(value).toBeGreaterThan(5); // Проверяем, что значение больше 5
});

// Отладка кода с использованием условий
// Для отладки условий можно использовать инструменты разработчика браузера, такие как Chrome DevTools или Firefox Developer Tools. Можно также добавлять console.log() или debugger в код для вывода промежуточных результатов и остановки выполнения программы для анализа состояния.

// Пример:
const number = 5;
if (number > 10) {
    console.log("Число больше 10");
} else {
    console.log("Число меньше или равно 10");
}

// Применение инструментов разработчика для анализа условий
// Инструменты разработчика в браузере позволяют отслеживать выполнение кода и анализировать условия, которые сработали или не сработали. Можно использовать консоль для вывода значений переменных и состояния программы.

// Пример (используя Chrome DevTools):
// 1. Открываем вкладку "Инструменты разработчика" в браузере.
// 2. Переходим на вкладку "Консоль".
// 3. Вводим код с условиями и наблюдаем результаты выполнения.

