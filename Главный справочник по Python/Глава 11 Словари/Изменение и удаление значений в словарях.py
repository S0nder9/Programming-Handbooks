# Глава 11: Словари - Изменение и удаление значений в словарях

# Словари в Python - это неупорядоченные коллекции пар "ключ-значение", где ключи должны быть уникальными и неизменяемыми типами данных,
# такими как строки, числа или кортежи. Значения могут быть любого типа данных и могут изменяться.

# Изменение значений в словарях
# Для изменения значения в словаре достаточно обратиться к ключу и присвоить ему новое значение.
# Если ключ существует, его значение будет обновлено. Если ключа нет, он будет добавлен в словарь с указанным значением.

# Пример изменения значений в словаре
my_dict = {'name': 'Alice', 'age': 25, 'city': 'New York'}
print("Оригинальный словарь:", my_dict)

# Изменение значения по ключу 'age'
my_dict['age'] = 26
print("После изменения возраста:", my_dict)

# Добавление нового ключа 'profession'
my_dict['profession'] = 'Engineer'
print("После добавления профессии:", my_dict)

# Удаление значений в словарях
# Для удаления значения в словаре можно использовать оператор del или метод pop().
# Оператор del удаляет пару "ключ-значение" из словаря. Метод pop() также удаляет пару "ключ-значение", но возвращает значение, связанное с ключом.

# Пример удаления значений из словаря
my_dict = {'name': 'Alice', 'age': 25, 'city': 'New York'}
print("Оригинальный словарь:", my_dict)

# Удаление ключа 'city' с помощью del
del my_dict['city']
print("После удаления города с помощью del:", my_dict)

# Удаление ключа 'age' с помощью pop и сохранение удаленного значения
removed_value = my_dict.pop('age')
print("После удаления возраста с помощью pop:", my_dict)
print("Удаленное значение:", removed_value)

# Итог
# Словари в Python позволяют легко изменять и удалять значения по ключам.
# Использование оператора del и метода pop() предоставляет гибкость в управлении элементами словаря.
# Эти операции являются важной частью работы со словарями и помогают поддерживать актуальность данных в ваших программах.
