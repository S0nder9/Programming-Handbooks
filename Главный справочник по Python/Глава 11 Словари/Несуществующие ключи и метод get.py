# Глава 11: Словари - Несуществующие ключи и метод get

# В Python словари (dict) являются неупорядоченными коллекциями, которые хранят пары ключ-значение.
# Ключи в словаре должны быть уникальными и неизменяемыми (например, строки, числа, кортежи), 
# а значения могут быть любыми объектами Python.

# Несуществующие ключи
# При обращении к словарю с несуществующим ключом возникает ошибка KeyError.
# Это происходит, когда вы пытаетесь получить значение по ключу, которого нет в словаре.

# Пример:
my_dict = {"name": "Alice", "age": 25}
# Следующая строка вызовет ошибку KeyError, так как ключ 'address' не существует в словаре
# print(my_dict["address"])

# Чтобы избежать этой ошибки, можно использовать метод get.

# Метод get
# Метод get позволяет безопасно получать значение по ключу.
# Если ключ существует, метод возвращает соответствующее значение.
# Если ключ не существует, метод возвращает значение по умолчанию (по умолчанию это None).

# Синтаксис:
# dict.get(key, default=None)

# Пример использования метода get
name = my_dict.get("name")  # Вернет "Alice", так как ключ 'name' существует
print("Name:", name)

address = my_dict.get("address")  # Вернет None, так как ключ 'address' не существует
print("Address:", address)

# Можно указать другое значение по умолчанию
address = my_dict.get("address", "No address found")
print("Address:", address)

# Использование метода get особенно полезно, когда вы не уверены, что ключ существует в словаре,
# и хотите избежать ошибки KeyError.

# Итог
# Словари в Python предоставляют эффективный способ хранения и доступа к данным с использованием пар ключ-значение.
# При попытке доступа к несуществующему ключу возникает ошибка KeyError.
# Метод get позволяет безопасно получать значения из словаря, предоставляя значение по умолчанию для несуществующих ключей.
# Это делает ваш код более надежным и защищенным от ошибок.
