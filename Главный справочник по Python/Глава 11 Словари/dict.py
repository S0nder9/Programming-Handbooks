# Глава 11: Словари - dict

# Словари (dict) - это один из основных встроенных типов данных в Python.
# Словарь представляет собой неупорядоченную коллекцию пар "ключ-значение".
# Ключи должны быть уникальными и неизменяемыми (например, строки, числа или кортежи), а значения могут быть любыми типами данных.

# Зачем используются словари?
# Словари используются, когда нужно хранить данные в виде пар "ключ-значение" и иметь возможность быстро извлекать значения по ключам.
# Они идеально подходят для задач, где важна быстрая операция поиска, вставки и удаления элементов.

# Как создавать и использовать словари?
# Словарь можно создать с помощью фигурных скобок {} или функции dict().
# Элементы словаря добавляются и извлекаются с помощью квадратных скобок [].

# Примеры создания и использования словарей

# Создание словаря
person = {
    "name": "Alice",
    "age": 30,
    "city": "New York"
}
print("Словарь person:", person)

# Доступ к значению по ключу
name = person["name"]
print("Имя:", name)

# Добавление нового элемента
person["email"] = "alice@example.com"
print("Словарь после добавления email:", person)

# Обновление значения
person["age"] = 31
print("Словарь после обновления возраста:", person)

# Удаление элемента
del person["city"]
print("Словарь после удаления city:", person)

# Методы словарей
# Python предоставляет множество методов для работы со словарями.
# Вот некоторые из них:

# Метод get() - возвращает значение по ключу, если ключ существует, иначе возвращает значение по умолчанию.
age = person.get("age", "Unknown")
print("Возраст:", age)

# Метод keys() - возвращает все ключи словаря.
keys = person.keys()
print("Ключи словаря:", keys)

# Метод values() - возвращает все значения словаря.
values = person.values()
print("Значения словаря:", values)

# Метод items() - возвращает все пары "ключ-значение" словаря.
items = person.items()
print("Пары ключ-значение словаря:", items)

# Метод update() - обновляет словарь, добавляя пары "ключ-значение" из другого словаря.
additional_info = {"job": "Engineer", "hobbies": ["Reading", "Traveling"]}
person.update(additional_info)
print("Словарь после обновления:", person)

# Метод pop() - удаляет элемент по ключу и возвращает его значение.
email = person.pop("email", "No email")
print("Удаленный email:", email)
print("Словарь после удаления email:", person)

# Итог
# Словари являются мощным и гибким инструментом для работы с данными в Python.
# Они позволяют эффективно хранить и извлекать значения по ключам, а также предоставляют множество методов для удобной работы с элементами словаря.
# Понимание и умение использовать словари поможет вам создавать более эффективные и удобные в использовании программы.
