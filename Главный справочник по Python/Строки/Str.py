# Глава 6: Строки - str

# Строки в Python

# Строки (тип данных str) являются одним из основных типов данных в Python, используемых для представления текстовой информации.
# Строки могут содержать буквы, цифры, символы и даже пробелы. В Python строки неизменяемы, то есть после создания строки ее значение нельзя изменить.

# Создание строк
# Строки можно создавать с помощью одинарных, двойных или тройных кавычек.

string1 = 'Это строка с одинарными кавычками'
string2 = "Это строка с двойными кавычками"
string3 = '''Это строка
с тройными кавычками, которая может занимать
несколько строк'''

print(string1)
print(string2)
print(string3)

# Основные операции со строками

# Конкатенация строк
# Строки можно объединять с помощью оператора +

greeting = "Привет"
name = "Мир"
message = greeting + ", " + name + "!"
print("Конкатенация строк:", message)

# Дублирование строк
# Строки можно умножать на целое число для дублирования

repeat = "Ha" * 3
print("Дублирование строк:", repeat)

# Доступ к символам строки
# К каждому символу строки можно получить доступ по индексу, начиная с 0

first_char = greeting[0]
print("Первый символ строки:", first_char)

# Срезы строк
# Можно получать подстроки с помощью операции среза

substring = greeting[1:4]
print("Срез строки:", substring)

# Методы строк

# Python предоставляет множество методов для работы со строками. Вот некоторые из них:

# Преобразование строки в верхний регистр
upper_case = greeting.upper()
print("Верхний регистр:", upper_case)

# Преобразование строки в нижний регистр
lower_case = greeting.lower()
print("Нижний регистр:", lower_case)

# Поиск подстроки
position = message.find("Мир")
print("Поиск подстроки:", position)

# Замена подстроки
new_message = message.replace("Мир", "Python")
print("Замена подстроки:", new_message)

# Разделение строки на подстроки
words = message.split(", ")
print("Разделение строки:", words)

# Удаление пробелов в начале и конце строки
whitespace_string = "  Привет, Мир!  "
trimmed_string = whitespace_string.strip()
print("Удаление пробелов:", trimmed_string)

# Итог
# Строки являются важной частью программирования на Python. 
# Они используются для представления и манипуляции текстовыми данными.
# Понимание и умение использовать строки и их методы позволяет создавать более эффективные и удобные программы.

a = "dguihndfhuiaeoh"


print(a.replace())