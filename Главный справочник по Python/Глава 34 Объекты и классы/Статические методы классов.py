# Глава 34: Объекты и классы - Статические методы классов

# Введение
# В Python классы могут иметь методы, которые относятся не к экземпляру класса, а к самому классу.
# Такие методы называются статическими методами. Они определяются с использованием декоратора @staticmethod.

# Что такое статические методы классов?
# Статические методы - это методы, которые не принимают ссылку на экземпляр (self) или на класс (cls) как первый аргумент.
# Они могут быть вызваны как на уровне класса, так и на уровне экземпляра класса.
# Статические методы полезны для выполнения операций, которые относятся к классу, но не требуют доступа к состоянию экземпляра или класса.

# Зачем использовать статические методы классов?
# Статические методы используются для создания функций, которые логически связаны с классом, но не зависят от конкретного экземпляра класса.
# Они могут использоваться для создания утилитарных функций, связанных с классом, или для реализации функциональности, которая не требует доступа к атрибутам экземпляра или класса.

# Как создавать статические методы?
# Для создания статического метода используйте декоратор @staticmethod перед определением метода внутри класса.

# Пример
class MathOperations:
    # Статический метод для сложения двух чисел
    @staticmethod
    def add(x, y):
        return x + y

    # Статический метод для умножения двух чисел
    @staticmethod
    def multiply(x, y):
        return x * y

# Вызов статических методов
result_add = MathOperations.add(5, 3)
result_multiply = MathOperations.multiply(5, 3)

print("Результат сложения:", result_add)  # Результат сложения: 8
print("Результат умножения:", result_multiply)  # Результат умножения: 15

# Итог
# Статические методы классов - это полезные инструменты для создания методов, которые связаны с классом, но не требуют доступа к состоянию экземпляра или класса.
# Они упрощают создание утилитарных функций, которые логически относятся к классу, и могут быть вызваны как на уровне класса, так и на уровне его экземпляров.
