# Глава 34: Объекты и классы - Атрибуты класса

# Введение
# В Python классы представляют собой чертежи для создания объектов. Классы объединяют данные и функции, работающие с этими данными.
# Атрибуты класса - это переменные, которые принадлежат классу и доступны всем экземплярам этого класса.

# Зачем нужны атрибуты класса?
# Атрибуты класса полезны, когда вы хотите сохранить состояние или данные, общие для всех экземпляров класса.
# Они позволяют хранить информацию, которая должна быть разделена между всеми объектами, созданными из одного класса.

# Как создаются атрибуты класса?
# Атрибуты класса создаются внутри тела класса, но вне каких-либо методов.
# Они объявляются так же, как и обычные переменные, но их область видимости охватывает весь класс.

# Пример класса с атрибутами класса
class Dog:
    # Атрибут класса
    species = "Canis familiaris"

    def __init__(self, name, age):
        # Атрибуты экземпляра
        self.name = name
        self.age = age

    def description(self):
        return f"{self.name} is {self.age} years old"

    def speak(self, sound):
        return f"{self.name} says {sound}"

# Использование атрибутов класса
# Мы можем получить доступ к атрибуту класса через имя класса или через экземпляр класса.

# Создание экземпляров класса Dog
dog1 = Dog("Buddy", 5)
dog2 = Dog("Milo", 3)

# Доступ к атрибуту класса через экземпляры
print(dog1.species)  # Выведет: Canis familiaris
print(dog2.species)  # Выведет: Canis familiaris

# Доступ к атрибуту класса через имя класса
print(Dog.species)  # Выведет: Canis familiaris

# Изменение атрибутов класса
# Мы можем изменить значение атрибута класса для всех экземпляров, изменив его через имя класса.

# Изменение атрибута класса
Dog.species = "Canis lupus familiaris"

print(dog1.species)  # Выведет: Canis lupus familiaris
print(dog2.species)  # Выведет: Canis lupus familiaris

# Если мы изменим атрибут класса через экземпляр, это создаст новый атрибут экземпляра, который не изменит атрибут класса.

# Изменение атрибута через экземпляр (создает новый атрибут экземпляра)
dog1.species = "Canis domesticus"

print(dog1.species)  # Выведет: Canis domesticus (атрибут экземпляра)
print(dog2.species)  # Выведет: Canis lupus familiaris (атрибут класса)
print(Dog.species)   # Выведет: Canis lupus familiaris (атрибут класса)

# Итог
# Атрибуты класса являются важной частью объектно-ориентированного программирования в Python.
# Они позволяют сохранять данные, общие для всех экземпляров класса, и обеспечивают удобный способ организации и управления состоянием объектов.
