# Глава 36: Модули - Встроенные модули

# В Python модули играют ключевую роль в организации и повторном использовании кода.
# Модули позволяют разделять код на логические части, которые могут быть импортированы и использованы в других программах.
# Python поставляется с множеством встроенных модулей, которые предоставляют разнообразные функции для выполнения общих задач.

# Что такое встроенные модули?
# Встроенные модули - это модули, которые входят в стандартную библиотеку Python и доступны для использования без необходимости их установки.
# Эти модули предоставляют широкий спектр функциональности, от работы с файловой системой до выполнения математических операций и сетевого программирования.

# Примеры встроенных модулей:
# - os: модуль для работы с операционной системой
# - sys: модуль для доступа к некоторым переменным и функциям, взаимодействующим с интерпретатором Python
# - math: модуль для выполнения математических операций
# - datetime: модуль для работы с датами и временем
# - random: модуль для генерации случайных чисел

# Как использовать встроенные модули?
# Для использования встроенного модуля его необходимо импортировать с помощью ключевого слова import.
# После этого можно использовать функции и классы, предоставляемые этим модулем.

# Примеры

# Пример использования модуля os
import os
# Получение текущего рабочего каталога
current_directory = os.getcwd()
print("Текущий рабочий каталог:", current_directory)
# Список файлов и каталогов в текущем рабочем каталоге
files = os.listdir(current_directory)
print("Файлы и каталоги в текущем рабочем каталоге:", files)

# Пример использования модуля sys
import sys
# Получение списка аргументов командной строки
args = sys.argv
print("Аргументы командной строки:", args)
# Завершение программы с кодом выхода 0
# sys.exit(0)

# Пример использования модуля math
import math
# Вычисление квадратного корня числа
sqrt_value = math.sqrt(16)
print("Квадратный корень из 16:", sqrt_value)
# Вычисление синуса угла в радианах
sin_value = math.sin(math.pi / 2)
print("Синус угла π/2:", sin_value)

# Пример использования модуля datetime
import datetime
# Получение текущей даты и времени
current_datetime = datetime.datetime.now()
print("Текущая дата и время:", current_datetime)
# Форматирование даты
formatted_date = current_datetime.strftime("%Y-%m-%d %H:%M:%S")
print("Отформатированная дата и время:", formatted_date)

# Пример использования модуля random
import random
# Генерация случайного числа от 1 до 10
random_number = random.randint(1, 10)
print("Случайное число от 1 до 10:", random_number)
# Выбор случайного элемента из списка
elements = ['apple', 'banana', 'cherry']
random_element = random.choice(elements)
print("Случайный элемент из списка:", random_element)

# Итог
# Встроенные модули Python предоставляют мощные и удобные инструменты для решения множества задач.
# Знание и умение использовать эти модули позволяет значительно упростить разработку и улучшить качество кода.
# Встроенные модули охватывают широкий спектр функциональности и являются важной частью стандартной библиотеки Python.
