# Глава 36: Модули - Создание пакетов

# Введение
# В Python модули и пакеты используются для организации и повторного использования кода. 
# Модуль - это просто файл с расширением .py, который содержит функции, классы и переменные.
# Пакет - это коллекция модулей, организованная в директорию, которая содержит специальный файл __init__.py.

# Зачем используются модули и пакеты?
# Модули и пакеты используются для структурирования кода, чтобы сделать его более организованным и удобным для повторного использования.
# Это особенно важно в крупных проектах, где код может быть разбит на множество файлов и директорий.

# Как создать модуль?
# Создание модуля в Python очень просто. Достаточно создать файл с расширением .py и написать в нем код.
# Например, создадим модуль с именем my_module.py:

# my_module.py
def greet(name):
    return f"Привет, {name}!"

def farewell(name):
    return f"Прощай, {name}!"

# Теперь мы можем использовать этот модуль в другом файле, импортируя его:

# main.py
import my_module

print(my_module.greet("Никита"))
print(my_module.farewell("Никита"))

# Как создать пакет?
# Пакет - это директория, которая содержит модули и специальный файл __init__.py.
# Файл __init__.py может быть пустым или содержать инициализационный код для пакета.
# Например, создадим пакет с именем my_package:

# my_package/
# ├── __init__.py
# ├── module1.py
# └── module2.py

# module1.py
def func1():
    return "Функция 1 из module1"

# module2.py
def func2():
    return "Функция 2 из module2"

# __init__.py
from .module1 import func1
from .module2 import func2

# Теперь мы можем использовать этот пакет в другом файле, импортируя его:

# main.py
import my_package

print(my_package.func1())
print(my_package.func2())

# Использование пакетов для структурирования кода
# Пакеты позволяют структурировать код в логически связанные модули, что делает код более понятным и поддерживаемым.
# Например, в большом проекте вы можете создать отдельные пакеты для обработки данных, взаимодействия с базой данных, обработки ошибок и т.д.

# Итог
# Модули и пакеты являются важными инструментами для организации и повторного использования кода в Python.
# Они позволяют разбивать код на более мелкие, управляемые части и упрощают его поддержку и масштабирование.

# Примеры использования модулей и пакетов показаны выше, и они являются основой для построения сложных приложений в Python.
