# Глава 1: Основные концепции в Python

# Самое важное в Python
# Python - это мощный и универсальный язык программирования, который широко используется во многих областях, таких как веб-разработка, научные вычисления, анализ данных, искусственный интеллект и другие.

# Основные концепции
# Основные концепции в Python включают в себя объекты, функции, модули, классы, исключения, управляющие структуры и другие.

# Чем является
# Python является объектно-ориентированным языком программирования, что означает, что все данные в Python представлены в виде объектов или экземпляров классов.

# Как создается, где используется
# Python создается с использованием интерпретатора Python, который выполняет исходный код Python построчно.
# Он используется во многих областях, включая веб-разработку с помощью фреймворков Django и Flask, научные вычисления с помощью библиотеки NumPy, анализ данных с помощью библиотеки pandas, искусственный интеллект с помощью библиотеки TensorFlow и многое другое.

# Актуально ли
# Python остается одним из самых актуальных и востребованных языков программирования благодаря своей простоте, читаемости кода, богатой экосистеме и мощным инструментам.

# Несколько примеров
# Пример 1: Простой скрипт Python
print("Привет, мир!")

# Пример 2: Определение функции
def add_numbers(a, b):
    return a + b

# Пример 3: Использование библиотеки для анализа данных
import pandas as pd # type: ignore
data = {'Имя': ['Алиса', 'Боб', 'Чарли'],
        'Возраст': [25, 30, 35]}
df = pd.DataFrame(data)
print(df)

# Итог
# Python представляет собой мощный инструмент для разработки различных приложений, начиная от простых скриптов до сложных веб-приложений и научных вычислений.
# Он остается актуальным и востребованным языком программирования благодаря своей простоте и мощным возможностям.

