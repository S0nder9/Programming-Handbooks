# Глава 5: Основные концепции в Python

# Типы и структуры данных - Переменные и объекты

# В Python все данные представляют собой объекты. Объекты могут быть различных типов, таких как числа, строки, списки и т.д.
# Переменные используются для хранения ссылок на объекты. Переменная не содержит сам объект, а лишь ссылается на него.

# Как связаны переменные и объекты?
# Когда вы создаете переменную и присваиваете ей значение, вы фактически создаете объект в памяти и привязываете к нему переменную.
# Переменная становится именем, под которым можно обращаться к этому объекту.

# Как работают переменные и объекты?
# При присвоении значения переменной создается объект, если его еще нет, и переменная ссылается на этот объект.
# Если другой переменной присвоить значение первой переменной, обе переменные будут ссылаться на один и тот же объект.

# Пример:
a = 10  # Создается объект 10, и переменная a ссылается на него
b = a   # Переменная b теперь ссылается на тот же объект 10

# Изменение значения переменной
a = 20  # Создается новый объект 20, и переменная a теперь ссылается на него
# Переменная b по-прежнему ссылается на объект 10

# На что ссылаются переменные?
# Переменные в Python ссылаются на объекты, которые хранят данные. Тип объекта определяет, какие операции могут быть выполнены над данными.
# Например, если переменная ссылается на строку, вы можете использовать методы строк для работы с ней.

# Примеры различных типов объектов:
# Число (целое)
num = 42
print("Число:", num, type(num))

# Число (вещественное)
flt = 3.14
print("Вещественное число:", flt, type(flt))

# Строка
text = "Hello, World!"
print("Строка:", text, type(text))

# Список
lst = [1, 2, 3, 4, 5]
print("Список:", lst, type(lst))

# Словарь
dct = {"ключ": "значение", "имя": "Алиса"}
print("Словарь:", dct, type(dct))

# Переменные могут ссылаться на объекты любого типа, и тип объекта может быть изменен путем присвоения переменной значения другого типа.

# Итог
# В Python переменные являются ссылками на объекты. Объекты имеют определенные типы, которые определяют, какие операции могут быть выполнены над данными.
# Понимание того, как работают переменные и объекты, помогает эффективно использовать типы данных и структуры данных в Python.

a = 10

print(id(a))