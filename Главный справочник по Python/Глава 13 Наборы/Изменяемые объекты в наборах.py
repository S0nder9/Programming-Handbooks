# Глава 13: Наборы - Изменяемые объекты в наборах

# Наборы (sets) в Python - это коллекции, которые содержат уникальные элементы в неупорядоченном виде.
# Наборы полезны, когда вам нужно хранить уникальные элементы и быстро выполнять операции объединения, пересечения и разности.
# В Python есть два типа наборов: неизменяемые (frozenset) и изменяемые (set).

# В этой главе мы сосредоточимся на изменяемых наборах и рассмотрим, как работать с ними, а также какие ограничения существуют в отношении изменяемых объектов в наборах.

# Изменяемые объекты в наборах
# Важно понимать, что элементы в наборах должны быть хешируемыми, что означает, что они должны иметь неизменяемый хэш-код.
# Это позволяет Python быстро проверять наличие элементов в наборе.
# Примеры хешируемых объектов: строки, числа, кортежи, неизменяемые объекты.
# Примеры неизменяемых объектов: списки, словари, другие наборы.

# Рассмотрим, как создавать и использовать изменяемые наборы в Python.

# Создание набора
my_set = {1, 2, 3, 4}
print("Первоначальный набор:", my_set)

# Добавление элемента в набор
my_set.add(5)
print("Набор после добавления элемента:", my_set)

# Удаление элемента из набора
my_set.remove(3)
print("Набор после удаления элемента:", my_set)

# Проверка наличия элемента в наборе
print("Есть ли 2 в наборе?", 2 in my_set)

# Объединение двух наборов
set1 = {1, 2, 3}
set2 = {3, 4, 5}
union_set = set1.union(set2)
print("Объединение set1 и set2:", union_set)

# Пересечение двух наборов
intersection_set = set1.intersection(set2)
print("Пересечение set1 и set2:", intersection_set)

# Разность двух наборов
difference_set = set1.difference(set2)
print("Разность set1 и set2:", difference_set)

# Пример использования изменяемых и неизменяемых объектов в наборах
try:
    my_set.add([6, 7, 8])
except TypeError as e:
    print("Ошибка при добавлении изменяемого объекта в набор:", e)

# Вывод: изменяемые объекты, такие как списки, нельзя добавлять в наборы, потому что они не являются хешируемыми.

# Итог
# Наборы в Python - это мощный инструмент для хранения уникальных элементов и выполнения различных операций с ними.
# Однако, важно помнить, что только хешируемые (неизменяемые) объекты могут быть добавлены в наборы.
# Понимание этих ограничений и возможностей позволяет эффективно использовать наборы в ваших программах.

a = {10}
b = {20}

print(a | b)