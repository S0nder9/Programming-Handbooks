# Глава 43: Работа с регулярными выражениями - Сохранение паттерна в отдельном объекте

# Введение
# В Python модуль `re` используется для работы с регулярными выражениями. Регулярные выражения (или "регексы") — это мощный инструмент для поиска и обработки текстовых данных.
# Одним из полезных подходов является сохранение регулярного выражения в отдельном объекте для многократного использования.
# Это повышает производительность программы и улучшает читаемость кода, особенно когда регулярное выражение сложное или используется несколько раз.

# Зачем сохранять паттерн в отдельном объекте?
# Сохранение регулярного выражения в отдельном объекте позволяет вам компилировать регулярное выражение один раз и повторно использовать его в разных частях программы.
# Это особенно полезно, когда вы работаете с большими данными или сложными паттернами, так как повторная компиляция одного и того же паттерна может замедлить выполнение программы.

# Как это делается?
# Для этого используется функция `re.compile()`, которая компилирует регулярное выражение в отдельный объект. Этот объект можно использовать для поиска, замены или других операций с текстом.
# Сохранение паттерна в объекте облегчает работу с регулярными выражениями, делая код более организованным и легким для понимания.

# Пример использования
import re

# Сохраняем регулярное выражение в объекте
pattern = re.compile(r'\d+')  # Паттерн для поиска последовательностей цифр

# Теперь мы можем использовать объект pattern для поиска в тексте
text = "В этом тексте есть числа: 123, 456 и 789."

# Используем pattern для поиска всех совпадений
matches = pattern.findall(text)

# Выводим результаты
print(f"Найденные числа: {matches}")

# Пример с использованием метода `search` для поиска первого совпадения
match = pattern.search(text)
if match:
    print(f"Первое найденное число: {match.group()}")

# Итог
# Сохранение паттерна регулярного выражения в отдельном объекте повышает производительность программы и делает код более чистым и понятным.
# Это удобно, когда одно и то же регулярное выражение используется многократно. Модуль `re` и функция `re.compile()` предоставляют эффективный способ работы с регулярными выражениями в Python.
