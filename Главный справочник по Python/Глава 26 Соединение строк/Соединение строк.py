# Глава 26: Соединение строк

# Соединение строк (конкатенация) - это процесс объединения двух или более строк в одну строку.
# В Python это можно сделать несколькими способами, каждый из которых имеет свои особенности и области применения.

# Способы соединения строк

# 1. Использование оператора '+'
# Это самый простой и распространенный способ объединения строк в Python.
# Оператор '+' объединяет две строки, создавая новую строку.

str1 = "Hello"
str2 = "World"
result = str1 + " " + str2
print("Результат соединения с использованием '+':", result)

# 2. Использование метода join()
# Метод join() позволяет объединить список строк в одну строку с указанным разделителем.
# Это полезно, когда нужно объединить большое количество строк.

list_of_strings = ["Python", "is", "awesome"]
result = " ".join(list_of_strings)
print("Результат соединения с использованием join():", result)

# 3. Использование форматирования строк
# Форматирование строк позволяет встраивать значения переменных внутрь строки.
# Существует несколько способов форматирования строк: %-форматирование, str.format() и f-строки.

# %-форматирование (старый стиль)
name = "Alice"
age = 30
result = "My name is %s and I am %d years old." % (name, age)
print("Результат соединения с использованием %-форматирования:", result)

# str.format() (новый стиль)
result = "My name is {} and I am {} years old.".format(name, age)
print("Результат соединения с использованием str.format():", result)

# f-строки (начиная с Python 3.6)
result = f"My name is {name} and I am {age} years old."
print("Результат соединения с использованием f-строк:", result)

# 4. Использование операторов += и *=
# Оператор += используется для добавления строки к существующей строке.
# Оператор *= используется для повторения строки несколько раз.

# Оператор +=
str1 = "Hello"
str1 += " World"
print("Результат соединения с использованием '+=':", str1)

# Оператор *=
str2 = "Echo"
str2 *= 3
print("Результат соединения с использованием '*=':", str2)

# Зачем используется соединение строк?
# Соединение строк используется во многих сценариях, включая создание сообщений для пользователей, построение сложных текстовых данных, генерацию HTML-кода и многое другое.

# Несколько примеров

# Пример: Создание сообщения для пользователя
first_name = "John"
last_name = "Doe"
full_name = first_name + " " + last_name
message = "Hello, " + full_name + "! Welcome to our platform."
print("Сообщение для пользователя:", message)

# Пример: Построение HTML-кода
title = "My Website"
header = "Welcome to My Website"
paragraph = "This is a simple paragraph."
html = "<html><head><title>" + title + "</title></head><body><h1>" + header + "</h1><p>" + paragraph + "</p></body></html>"
print("HTML-код:", html)

# Итог
# Соединение строк является важной частью работы с текстовыми данными в Python.
# Существует несколько способов соединения строк, каждый из которых имеет свои преимущества и области применения.
# Понимание этих методов поможет вам эффективно работать с текстовыми данными в ваших программах.
