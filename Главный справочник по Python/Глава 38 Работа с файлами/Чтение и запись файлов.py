# Глава 38: Работа с файлами - Чтение и запись файлов

# Введение
# Работа с файлами в Python является важной частью программирования, так как это позволяет сохранять данные между запусками программы.
# Основные операции с файлами включают чтение данных из файлов и запись данных в файлы.

# Открытие файла
# Для работы с файлами в Python используется функция open(), которая открывает файл и возвращает объект файла.
# Функция open() принимает два основных аргумента: имя файла и режим открытия файла.

# Режимы открытия файлов:
# 'r' - чтение (по умолчанию)
# 'w' - запись (содержимое файла будет перезаписано)
# 'a' - добавление (новые данные будут дописаны в конец файла)
# 'b' - бинарный режим (используется для работы с бинарными файлами)

# Чтение из файла
# Для чтения данных из файла используется метод read(), который считывает все содержимое файла.
# Также можно использовать методы readline() для чтения одной строки и readlines() для чтения всех строк в список.

# Запись в файл
# Для записи данных в файл используется метод write(), который записывает строку в файл.
# Также можно использовать метод writelines() для записи списка строк.

# Закрытие файла
# После работы с файлом его необходимо закрыть с помощью метода close().

# Примеры

# Чтение данных из файла
with open('example.txt', 'r') as file:
    # Чтение всего содержимого файла
    content = file.read()
    print("Содержимое файла:")
    print(content)

    # Возвращаемся в начало файла
    file.seek(0)

    # Чтение файла построчно
    print("\nСчитывание файла построчно:")
    for line in file:
        print(line, end='')

# Запись данных в файл
with open('output.txt', 'w') as file:
    file.write("Привет, мир!\n")
    file.write("Это пример записи в файл.\n")

# Добавление данных в файл
with open('output.txt', 'a') as file:
    file.write("Добавляем новую строку в конец файла.\n")

# Чтение и запись в бинарном режиме
# Открытие изображения в бинарном режиме для чтения
with open('example.jpg', 'rb') as file:
    binary_content = file.read()

# Запись бинарных данных в новый файл
with open('copy_example.jpg', 'wb') as file:
    file.write(binary_content)

# Итог
# Работа с файлами в Python является важным аспектом для сохранения и загрузки данных.
# Функция open() позволяет открывать файлы в различных режимах для чтения и записи.
# Методы read(), readline(), readlines(), write() и writelines() предоставляют удобные способы для работы с содержимым файлов.
# Использование конструкции with позволяет автоматически закрывать файл после завершения работы с ним, что является хорошей практикой.
