# Глава 38: Работа с файлами - Работа с путями к файлам и директориям

# Работа с путями к файлам и директориям является важной частью работы с файлами в Python.
# Это включает в себя умение правильно задавать пути к файлам, манипулировать этими путями и выполнять различные операции с файлами и директориями.

# В Python для работы с путями к файлам и директориям часто используются модули os и pathlib.
# Модуль os предоставляет функции для взаимодействия с операционной системой, включая работу с файловой системой.
# Модуль pathlib предоставляет объектно-ориентированный подход к работе с путями к файлам и директориям.

import os
from pathlib import Path

# Определение путей
# Путь к файлу или директории может быть абсолютным или относительным.
# Абсолютный путь начинается с корневой директории, тогда как относительный путь начинается с текущей рабочей директории.

# Пример абсолютного пути (Windows):
absolute_path = "C:/Users/Username/Documents/example.txt"

# Пример относительного пути:
relative_path = "documents/example.txt"

# Получение текущей рабочей директории
current_directory = os.getcwd()
print("Текущая рабочая директория:", current_directory)

# Изменение текущей рабочей директории
os.chdir("..")
print("Новая текущая рабочая директория:", os.getcwd())

# Проверка существования файла или директории
file_exists = os.path.exists(relative_path)
print(f"Существует ли файл {relative_path}? {file_exists}")

# Создание новой директории
new_directory = "new_folder"
if not os.path.exists(new_directory):
    os.makedirs(new_directory)
    print(f"Директория {new_directory} была создана")

# Работа с pathlib
# Модуль pathlib предоставляет более удобный и современный способ работы с путями к файлам и директориям.

# Создание объекта пути
path = Path("example_folder/example.txt")

# Вывод различных частей пути
print("Часть пути (имя файла):", path.name)
print("Часть пути (расширение файла):", path.suffix)
print("Часть пути (директория):", path.parent)

# Проверка существования файла или директории
print(f"Существует ли файл {path}? {path.exists()}")

# Создание новой директории с помощью pathlib
new_path = Path("new_folder_with_pathlib")
if not new_path.exists():
    new_path.mkdir(parents=True)
    print(f"Директория {new_path} была создана с помощью pathlib")

# Итог
# Работа с путями к файлам и директориям является важной частью работы с файлами в Python.
# Модули os и pathlib предоставляют мощные и удобные инструменты для работы с файловой системой.
# Использование этих модулей позволяет вам создавать, изменять и проверять пути к файлам и директориям, что делает работу с файлами более эффективной и гибкой.
