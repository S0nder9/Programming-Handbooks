# Глава 23: Логические операторы

# Логические операторы в Python - это инструменты, которые позволяют вам выполнять логические операции между выражениями.
# Они возвращают логические значения (True или False) в зависимости от условий, которые вы проверяете.
# Логические операторы широко используются в условных выражениях, циклах и других конструкциях, где требуется оценка логических условий.

# В Python есть три основных логических оператора: and, or, not.

# 1. Оператор `and`
# Оператор `and` возвращает True только тогда, когда оба операнда (условия) истинны. Если хотя бы один из операндов ложен, результат будет False.

# Пример:
a = True
b = False
result = a and b  # Результат будет False, так как один из операндов (b) ложен.
print("a and b =", result)

# Пример использования в условии:
x = 10
y = 20
if x > 5 and y < 25:
    print("Оба условия истинны")

# 2. Оператор `or`
# Оператор `or` возвращает True, если хотя бы один из операндов (условий) истинный. Если оба операнда ложны, результат будет False.

# Пример:
a = True
b = False
result = a or b  # Результат будет True, так как один из операндов (a) истинен.
print("a or b =", result)

# Пример использования в условии:
x = 10
y = 30
if x > 5 or y < 25:
    print("Хотя бы одно из условий истинно")

# 3. Оператор `not`
# Оператор `not` возвращает True, если условие ложно, и False, если условие истинно. Он инвертирует логическое значение.

# Пример:
a = True
result = not a  # Результат будет False, так как a истинно.
print("not a =", result)

# Пример использования в условии:
x = 10
if not (x > 15):
    print("x не больше 15")

# Логические операторы можно комбинировать для создания более сложных условий.

# Пример комбинации операторов:
x = 10
y = 20
z = 30
if (x < y and y < z) or (x > z):
    print("Сложное условие выполнено")

# Логические операторы могут также быть полезны в ситуациях, когда нужно проверить несколько условий одновременно или инвертировать условия.

# Итог
# Логические операторы `and`, `or` и `not` являются основными инструментами для выполнения логических операций в Python.
# Они позволяют вам комбинировать и инвертировать условия, что делает ваш код более гибким и мощным.
# Понимание и правильное использование этих операторов помогает создавать эффективные и читаемые условия в ваших программах.

