# Глава 21: Как работать с функциями - Глобальные и локальные переменные

# Глобальные и локальные переменные
# В Python переменные могут быть глобальными или локальными в зависимости от того, где они объявлены и используются.
# Понимание разницы между глобальными и локальными переменными важно для правильного управления данными в вашей программе.

# Глобальные переменные
# Глобальные переменные объявляются вне всех функций и доступны для использования в любом месте программы.
# Они могут быть изменены внутри функций, если они объявлены как global.

# Пример глобальной переменной
global_var = "Это глобальная переменная"

def print_global():
    print(global_var)  # Глобальная переменная доступна внутри функции

print_global()  # Выведет: Это глобальная переменная

# Локальные переменные
# Локальные переменные объявляются внутри функции и доступны только в пределах этой функции.
# Они не видны и не могут быть использованы вне функции, в которой были объявлены.

# Пример локальной переменной
def print_local():
    local_var = "Это локальная переменная"
    print(local_var)

print_local()  # Выведет: Это локальная переменная
# print(local_var)  # Это вызовет ошибку, так как local_var не доступна вне функции

# Глобальные переменные внутри функции
# Если вы хотите изменить глобальную переменную внутри функции, вы должны объявить ее как global.
global_counter = 0

def increment_counter():
    global global_counter
    global_counter += 1

increment_counter()
print(global_counter)  # Выведет: 1

# Локальные переменные не могут изменять глобальные переменные без использования global
def increment_counter_local():
    global_counter = 10  # Это создаст новую локальную переменную с тем же именем

increment_counter_local()
print(global_counter)  # Выведет: 1, так как глобальная переменная не была изменена

# Итог
# Понимание разницы между глобальными и локальными переменными позволяет лучше управлять областью видимости и временем жизни переменных в вашей программе.
# Глобальные переменные доступны в любом месте программы, но их изменение внутри функции требует явного указания global.
# Локальные переменные существуют только внутри функции и недоступны вне её.

# Правильное использование глобальных и локальных переменных помогает избежать ошибок и делает код более понятным и поддерживаемым.
