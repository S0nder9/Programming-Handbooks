# Глава 21: Как работать с функциями - Жизненный цикл переменных

# В Python, как и в других языках программирования, переменные имеют жизненный цикл, который определяет их доступность и время существования.
# Понимание жизненного цикла переменных важно для эффективного управления памятью и избегания ошибок в коде.

# Жизненный цикл переменных
# Жизненный цикл переменной начинается с момента её создания (инициализации) и заканчивается, когда она становится недоступной для использования, что обычно происходит, когда переменная выходит из области видимости или её память освобождается системой.

# В Python переменные могут быть локальными, глобальными и не локальными (nonlocal).

# Локальные переменные
# Локальные переменные создаются внутри функций и доступны только в пределах этих функций. Они уничтожаются после завершения работы функции.
def my_function():
    local_var = "I am a local variable"
    print(local_var)  # Переменная доступна внутри функции

my_function()
# print(local_var)  # Ошибка: переменная не доступна вне функции

# Глобальные переменные
# Глобальные переменные создаются на уровне модуля и доступны в любой части этого модуля. Они существуют в течение всего времени работы программы.
global_var = "I am a global variable"

def another_function():
    print(global_var)  # Переменная доступна внутри функции

another_function()
print(global_var)  # Переменная доступна вне функции

# Nonlocal переменные
# Nonlocal переменные используются для работы с переменными, которые находятся в области видимости внешней функции.
def outer_function():
    outer_var = "I am an outer variable"

    def inner_function():
        nonlocal outer_var
        outer_var = "I have been modified"
        print(outer_var)  # Переменная доступна и изменена внутри внутренней функции

    inner_function()
    print(outer_var)  # Переменная изменена и доступна в пределах внешней функции

outer_function()

# Область видимости (scope)
# Область видимости переменной определяет, где в коде можно использовать эту переменную.
# В Python есть четыре типа областей видимости:
# 1. Локальная область (Local) - внутри функции.
# 2. Область вложенной функции (Enclosing) - во вложенных функциях.
# 3. Глобальная область (Global) - на уровне модуля.
# 4. Встроенная область (Built-in) - в рамках встроенных функций Python.

# Пример демонстрации различных областей видимости
built_in_var = dir  # dir - это встроенная функция

def global_function():
    global_var = "I am a global variable"

    def enclosed_function():
        enclosed_var = "I am an enclosed variable"

        def local_function():
            local_var = "I am a local variable"
            print(local_var)  # Доступ к локальной переменной
            print(enclosed_var)  # Доступ к переменной вложенной функции
            print(global_var)  # Доступ к глобальной переменной
            print(built_in_var)  # Доступ к встроенной переменной

        local_function()

    enclosed_function()

global_function()

# Итог
# Жизненный цикл переменных в Python включает их создание, использование и уничтожение.
# Понимание различных областей видимости (локальной, глобальной, вложенной и встроенной) помогает управлять доступом к переменным и предотвращать ошибки.
# Правильное управление переменными и их областями видимости делает код более понятным и эффективным.
