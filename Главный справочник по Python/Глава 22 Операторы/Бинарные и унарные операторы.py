# Глава 22: Операторы - Бинарные и унарные операторы

# В Python операторы используются для выполнения различных операций над переменными и значениями.
# Операторы можно разделить на несколько категорий, включая арифметические, логические, побитовые и т.д.
# В этой главе мы рассмотрим бинарные и унарные операторы.

# Бинарные операторы
# Бинарные операторы работают с двумя операндами. Примеры бинарных операторов включают арифметические операторы, операторы сравнения и логические операторы.

# Арифметические операторы
# Эти операторы используются для выполнения математических операций.
a = 10
b = 5

# Сложение
sum_result = a + b
print("Сложение:", sum_result)  # Вывод: 15

# Вычитание
sub_result = a - b
print("Вычитание:", sub_result)  # Вывод: 5

# Умножение
mul_result = a * b
print("Умножение:", mul_result)  # Вывод: 50

# Деление
div_result = a / b
print("Деление:", div_result)  # Вывод: 2.0

# Деление с округлением вниз
floordiv_result = a // b
print("Целочисленное деление:", floordiv_result)  # Вывод: 2

# Остаток от деления
mod_result = a % b
print("Остаток от деления:", mod_result)  # Вывод: 0

# Возведение в степень
pow_result = a ** b
print("Возведение в степень:", pow_result)  # Вывод: 100000

# Операторы сравнения
# Эти операторы используются для сравнения значений и возвращают логическое значение True или False.
print("Равно:", a == b)        # Вывод: False
print("Не равно:", a != b)     # Вывод: True
print("Больше:", a > b)        # Вывод: True
print("Меньше:", a < b)        # Вывод: False
print("Больше или равно:", a >= b)  # Вывод: True
print("Меньше или равно:", a <= b)  # Вывод: False

# Логические операторы
# Эти операторы используются для логических операций.
x = True
y = False

print("Логическое И:", x and y)  # Вывод: False
print("Логическое ИЛИ:", x or y)  # Вывод: True
print("Логическое НЕ:", not x)   # Вывод: False

# Побитовые операторы
# Эти операторы работают с битами чисел.
c = 6  # В двоичном виде: 110
d = 2  # В двоичном виде: 010

print("Побитовое И:", c & d)  # Вывод: 2 (010)
print("Побитовое ИЛИ:", c | d)  # Вывод: 6 (110)
print("Побитовое исключающее ИЛИ:", c ^ d)  # Вывод: 4 (100)
print("Побитовый сдвиг влево:", c << 1)  # Вывод: 12 (1100)
print("Побитовый сдвиг вправо:", c >> 1)  # Вывод: 3 (011)

# Унарные операторы
# Унарные операторы работают с одним операндом. Примеры унарных операторов включают оператор отрицания и логическое НЕ.

# Унарный минус
n = 5
neg_result = -n
print("Унарный минус:", neg_result)  # Вывод: -5

# Логическое НЕ
bool_val = True
not_result = not bool_val
print("Логическое НЕ:", not_result)  # Вывод: False

# Итог
# Операторы являются основными строительными блоками для выполнения различных операций над данными в Python.
# Бинарные операторы работают с двумя операндами и включают арифметические, логические, побитовые и операторы сравнения.
# Унарные операторы работают с одним операндом и включают операторы отрицания и логическое НЕ.
# Понимание и правильное использование этих операторов помогает в создании эффективного и читаемого кода.
