# Глава 22: Операторы

# Операторы в Python

# Операторы в Python используются для выполнения операций над переменными и значениями.
# В Python есть различные типы операторов:
# 1. Арифметические операторы
# 2. Операторы сравнения
# 3. Логические операторы
# 4. Операторы присваивания
# 5. Побитовые операторы
# 6. Операторы членства
# 7. Операторы тождественности

# Арифметические операторы
# Арифметические операторы используются для выполнения математических операций, таких как сложение, вычитание и т.д.

a = 10
b = 3

print("Сложение:", a + b)       # 13
print("Вычитание:", a - b)      # 7
print("Умножение:", a * b)      # 30
print("Деление:", a / b)        # 3.3333...
print("Целочисленное деление:", a // b)  # 3
print("Возведение в степень:", a ** b)   # 1000
print("Модуль:", a % b)         # 1

# Операторы сравнения
# Операторы сравнения используются для сравнения двух значений. Они возвращают True или False.

print("Равно:", a == b)         # False
print("Не равно:", a != b)      # True
print("Больше:", a > b)         # True
print("Меньше:", a < b)         # False
print("Больше или равно:", a >= b)  # True
print("Меньше или равно:", a <= b)  # False

# Логические операторы
# Логические операторы используются для выполнения логических операций, такие как логическое И, ИЛИ и НЕ.

x = True
y = False

print("Логическое И:", x and y)     # False
print("Логическое ИЛИ:", x or y)    # True
print("Логическое НЕ:", not x)      # False

# Операторы присваивания
# Операторы присваивания используются для присвоения значений переменным.

c = 5
c += 2  # то же самое, что и c = c + 2
print("c после c += 2:", c)    # 7

c -= 2  # то же самое, что и c = c - 2
print("c после c -= 2:", c)    # 5

c *= 2  # то же самое, что и c = c * 2
print("c после c *= 2:", c)    # 10

c /= 2  # то же самое, что и c = c / 2
print("c после c /= 2:", c)    # 5.0

c //= 2  # то же самое, что и c = c // 2
print("c после c //= 2:", c)   # 2.0

c %= 2  # то же самое, что и c = c % 2
print("c после c %= 2:", c)    # 0.0

c **= 2  # то же самое, что и c = c ** 2
print("c после c **= 2:", c)   # 0.0

# Побитовые операторы
# Побитовые операторы используются для выполнения побитовых операций.

d = 6  # 110 в двоичном виде
e = 2  # 010 в двоичном виде

print("Побитовое И:", d & e)       # 2  (010 в двоичном виде)
print("Побитовое ИЛИ:", d | e)     # 6  (110 в двоичном виде)
print("Побитовое исключающее ИЛИ:", d ^ e)  # 4  (100 в двоичном виде)
print("Побитовое НЕ:", ~d)         # -7
print("Побитовое сдвиг влево:", d << 1)  # 12 (1100 в двоичном виде)
print("Побитовое сдвиг вправо:", d >> 1)  # 3  (011 в двоичном виде)

# Операторы членства
# Операторы членства используются для проверки, содержит ли последовательность указанное значение.

lst = [1, 2, 3, 4, 5]
print("2 в списке:", 2 in lst)    # True
print("6 в списке:", 6 in lst)    # False
print("6 не в списке:", 6 not in lst)  # True

# Операторы тождественности
# Операторы тождественности используются для проверки, ссылаются ли две переменные на один и тот же объект.

f = [1, 2, 3]
g = [1, 2, 3]
h = f

print("f идентичен g:", f is g)  # False
print("f идентичен h:", f is h)  # True
print("f не идентичен g:", f is not g)  # True

# Итог
# Операторы в Python позволяют выполнять разнообразные операции над данными, включая арифметические, логические, побитовые операции, а также операции присваивания, сравнения, членства и тождественности.
# Понимание этих операторов и умение их использовать является ключевым навыком для написания эффективного и функционального кода на Python.
