# Глава 41: Работа с датами и временем - Использование класса timedelta

# В Python для работы с датами и временем используется модуль datetime. Один из полезных классов этого модуля - timedelta.
# Класс timedelta представляет разницу между двумя моментами времени, которая может быть выражена в днях, секундах и микросекундах.

# Зачем используется класс timedelta?
# Класс timedelta используется для выполнения арифметических операций с датами и временем, таких как сложение, вычитание и вычисление разницы между датами.
# Это полезно, когда вам нужно добавить или вычесть определенный промежуток времени из даты, или когда вам нужно найти разницу между двумя датами.

# Как создается объект timedelta?
# Объект timedelta создается с использованием конструктора класса timedelta, в который можно передать следующие параметры:
# days, seconds, microseconds, milliseconds, minutes, hours, weeks.
# Каждый из этих параметров является необязательным и имеет значение по умолчанию 0.

# Примеры использования класса timedelta:

from datetime import datetime, timedelta

# Текущая дата и время
now = datetime.now()
print("Текущая дата и время:", now)

# Создание объекта timedelta
# Пример 1: Разница в 10 дней
delta_10_days = timedelta(days=10)
print("Разница в 10 дней:", delta_10_days)

# Пример 2: Разница в 1 час
delta_1_hour = timedelta(hours=1)
print("Разница в 1 час:", delta_1_hour)

# Пример 3: Разница в 2 недели
delta_2_weeks = timedelta(weeks=2)
print("Разница в 2 недели:", delta_2_weeks)

# Добавление timedelta к текущей дате
future_date = now + delta_10_days
print("Дата через 10 дней:", future_date)

# Вычитание timedelta из текущей даты
past_date = now - delta_1_hour
print("Дата 1 час назад:", past_date)

# Вычисление разницы между двумя датами
start_date = datetime(2024, 1, 1)
end_date = datetime(2024, 12, 31)
difference = end_date - start_date
print("Разница между 1 января 2024 и 31 декабря 2024:", difference)

# Итог
# Класс timedelta из модуля datetime предоставляет мощный инструмент для работы с временными интервалами в Python.
# Он позволяет легко выполнять арифметические операции с датами и временем, такие как добавление и вычитание промежутков времени, а также вычисление разницы между датами.
# Понимание и использование класса timedelta помогает создавать программы, которые эффективно работают с временными данными.
