# Глава 41: Работа с датами и временем - Модуль time

# Введение
# Модуль time в Python предоставляет различные функции для работы с датой и временем.
# Он позволяет вам получать текущую дату и время, измерять время выполнения программы, делать задержки в выполнении программы и многое другое.
# В этом разделе мы рассмотрим основные функции и методы, которые предоставляет модуль time.

import time

# Получение текущего времени
# Функция time.time() возвращает текущее время в секундах с начала эпохи (обычно 1 января 1970 года).
current_time = time.time()
print("Текущее время в секундах с начала эпохи:", current_time)

# Форматирование времени
# Функция time.ctime() принимает количество секунд с начала эпохи и возвращает строку с локальным временем.
formatted_time = time.ctime(current_time)
print("Форматированное текущее время:", formatted_time)

# Задержка выполнения программы
# Функция time.sleep() приостанавливает выполнение программы на заданное количество секунд.
print("Программа будет приостановлена на 3 секунды...")
time.sleep(3)
print("3 секунды прошли.")

# Измерение времени выполнения кода
# Функция time.perf_counter() возвращает значение таймера с высокой разрешающей способностью.
# Она полезна для измерения времени выполнения кода.
start_time = time.perf_counter()
# Пример кода, время выполнения которого мы будем измерять
sum_value = 0
for i in range(1000000):
    sum_value += i
end_time = time.perf_counter()
execution_time = end_time - start_time
print("Время выполнения кода:", execution_time, "секунд")

# Получение структуры времени
# Функция time.localtime() принимает количество секунд с начала эпохи и возвращает структуру времени (объект struct_time).
local_time = time.localtime(current_time)
print("Локальное время:", local_time)

# Пример извлечения отдельных компонентов времени
year = local_time.tm_year
month = local_time.tm_mon
day = local_time.tm_mday
hour = local_time.tm_hour
minute = local_time.tm_min
second = local_time.tm_sec
print(f"Текущая дата и время: {year}-{month:02d}-{day:02d} {hour:02d}:{minute:02d}:{second:02d}")

# Преобразование структуры времени в количество секунд
# Функция time.mktime() принимает объект struct_time и возвращает количество секунд с начала эпохи.
seconds_since_epoch = time.mktime(local_time)
print("Количество секунд с начала эпохи из структуры времени:", seconds_since_epoch)

# Работа с UTC временем
# Функция time.gmtime() возвращает структуру времени в формате UTC (всемирное координированное время).
utc_time = time.gmtime(current_time)
print("Время в формате UTC:", utc_time)

# Итог
# Модуль time предоставляет множество функций для работы с датами и временем.
# Вы можете использовать его для получения текущего времени, форматирования времени, задержки выполнения программы, измерения времени выполнения кода и работы с UTC временем.
# Эти функции полезны в различных сценариях программирования, где требуется обработка дат и времени.

