# Глава 32: Циклы - Цикл while

# Циклы являются важной частью любого языка программирования, и Python не исключение.
# Цикл while в Python используется для выполнения блока кода до тех пор, пока заданное условие является истинным.

# Зачем используется цикл while?
# Цикл while используется, когда вы не знаете заранее, сколько раз нужно повторить блок кода.
# Он продолжает выполняться до тех пор, пока условие остается истинным, что делает его полезным для сценариев, где количество итераций не определено заранее.

# Как используется цикл while?
# Цикл while начинается с ключевого слова while, за которым следует условие.
# Блок кода, который должен выполняться при истинности условия, помещается в отступе после строки while.

# Общий синтаксис цикла while:
# while условие:
#     блок кода

# Несколько примеров

# Пример 1: Простой цикл while
count = 0
while count < 5:
    print("Count is:", count)
    count += 1

# В этом примере цикл продолжается до тех пор, пока переменная count меньше 5.
# С каждой итерацией значение count увеличивается на 1.

# Пример 2: Использование цикла while для запроса ввода у пользователя
user_input = ""
while user_input.lower() != "да":
    user_input = input("Вы хотите продолжить? (да/нет): ")

# В этом примере цикл while продолжает запрашивать у пользователя ввод, пока он не введет "да".

# Пример 3: Цикл while с использованием break и continue
n = 10
while n > 0:
    n -= 1
    if n % 2 == 0:
        continue  # Пропустить оставшуюся часть кода и перейти к следующей итерации
    if n == 3:
        break  # Прервать цикл, если n равно 3
    print("n is:", n)

# В этом примере, если n является четным, оператор continue пропускает оставшуюся часть кода и переходит к следующей итерации.
# Если n равно 3, оператор break прерывает цикл.

# Итог
# Цикл while является мощным инструментом для выполнения блока кода до тех пор, пока условие остается истинным.
# Он полезен в ситуациях, когда количество итераций заранее неизвестно.
# Понимание и умение использовать цикл while позволяет создавать более гибкие и эффективные программы.
