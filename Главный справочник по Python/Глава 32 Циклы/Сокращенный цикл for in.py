# Глава 32: Циклы - Сокращенный цикл for in

# В Python цикл for in используется для перебора элементов в последовательности (например, списка, кортежа, строки и т.д.).
# Это один из самых популярных способов итерирования в Python из-за его простоты и читаемости.
# Сокращенный цикл for in также называется списковым включением (list comprehension) и используется для создания новых списков на основе существующих.

# Зачем используется цикл for in?
# Цикл for in используется для итерирования по элементам последовательности. Это позволяет выполнять определенные действия для каждого элемента последовательности.

# Зачем используется списковое включение (сокращенный цикл for in)?
# Списковое включение позволяет компактно создавать списки, применяя выражение к каждому элементу существующей последовательности.
# Это делает код более кратким и часто более читабельным.

# Как использовать цикл for in?
# Использование цикла for in:
# for элемент in последовательность:
#     действия с элементом

# Как использовать списковое включение?
# Использование спискового включения:
# новый_список = [выражение for элемент in последовательность if условие]

# Несколько примеров

# Пример обычного цикла for in
numbers = [1, 2, 3, 4, 5]
for number in numbers:
    print(number)

# Пример использования спискового включения для создания нового списка квадратов чисел
squares = [number ** 2 for number in numbers]
print(squares)

# Пример использования спискового включения с условием
even_squares = [number ** 2 for number in numbers if number % 2 == 0]
print(even_squares)

# Итог
# Цикл for in является важным инструментом для перебора элементов последовательности и выполнения операций с каждым элементом.
# Сокращенный цикл for in, или списковое включение, предоставляет удобный способ создания новых списков на основе существующих,
# что делает код более кратким и читабельным.

a = [100, 100, 100]

b = (i ** i for i in a)

print(b)