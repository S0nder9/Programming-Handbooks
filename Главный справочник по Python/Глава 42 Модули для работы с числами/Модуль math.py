# Глава 42: Модули для работы с числами - Модуль math

# В Python модуль math предоставляет множество математических функций и констант,
# которые позволяют проводить разнообразные вычисления, начиная от работы с тригонометрическими функциями и заканчивая операциями над числами с плавающей точкой.

# Модуль math особенно полезен при решении задач, связанных с математикой, физикой или любыми другими областями, где необходимы сложные вычисления.

# Чтобы использовать функции из модуля math, необходимо импортировать его в программу.
import math

# Основные функции и константы модуля math

# 1. Константы
# Модуль math предоставляет две важные математические константы:
pi = math.pi  # Число Пи (π), примерно равно 3.14159
e = math.e    # Основание натурального логарифма, примерно равно 2.71828

print("Число Пи:", pi)
print("Основание натурального логарифма:", e)

# 2. Тригонометрические функции
# Модуль math предоставляет несколько функций для работы с углами и тригонометрией:
angle_in_radians = math.radians(45)  # Преобразование углов из градусов в радианы
sin_value = math.sin(angle_in_radians)  # Синус угла
cos_value = math.cos(angle_in_radians)  # Косинус угла
tan_value = math.tan(angle_in_radians)  # Тангенс угла

print("Синус 45 градусов:", sin_value)
print("Косинус 45 градусов:", cos_value)
print("Тангенс 45 градусов:", tan_value)

# Также можно преобразовать углы из радиан обратно в градусы:
angle_in_degrees = math.degrees(angle_in_radians)
print("Преобразование радиан обратно в градусы:", angle_in_degrees)

# 3. Логарифмы
# Модуль math предоставляет функции для вычисления логарифмов:
log_value = math.log(100)  # Натуральный логарифм числа (по основанию e)
log10_value = math.log10(100)  # Логарифм числа по основанию 10

print("Натуральный логарифм 100:", log_value)
print("Логарифм 100 по основанию 10:", log10_value)

# 4. Экспоненциальные функции
# Для работы с экспонентами используется функция math.exp(), которая возвращает e в степени x:
exp_value = math.exp(2)  # e^2
print("e^2:", exp_value)

# 5. Округление чисел
# Модуль math предлагает несколько способов округления чисел:
number = 4.56
floor_value = math.floor(number)  # Округление в меньшую сторону
ceil_value = math.ceil(number)    # Округление в большую сторону

print("Округление числа 4.56 вниз:", floor_value)
print("Округление числа 4.56 вверх:", ceil_value)

# 6. Квадратный корень
# Для извлечения квадратного корня числа можно использовать функцию math.sqrt():
sqrt_value = math.sqrt(16)  # Квадратный корень из 16
print("Квадратный корень из 16:", sqrt_value)

# 7. Возведение в степень
# Хотя в Python можно возводить в степень через оператор **, модуль math предлагает функцию math.pow():
pow_value = math.pow(2, 3)  # 2^3
print("2 в степени 3:", pow_value)

# 8. Факториал
# Функция math.factorial() вычисляет факториал числа:
factorial_value = math.factorial(5)  # 5!
print("Факториал числа 5:", factorial_value)

# Итог
# Модуль math предоставляет широкий набор математических функций для проведения сложных вычислений.
# Он особенно полезен в научных и инженерных приложениях, где необходимо работать с числами, тригонометрией, логарифмами и другими математическими операциями.
# Для использования всех возможностей модуля достаточно импортировать его в вашу программу и вызывать необходимые функции.
