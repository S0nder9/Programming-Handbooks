// Глава 1: Введение в MongoDB (mongoose) - Добавление вложенной конечной точки GET

// В этом разделе мы рассмотрим, как добавить вложенную конечную точку GET для получения всех отзывов
// с возможностью фильтрации по определенному идентификатору тура. Использование Mongoose позволяет
// легко управлять данными в MongoDB, а также осуществлять запросы с учетом вложенности.

// Этот пример использует функцию `getAllReviews` для получения всех отзывов или только тех,
// которые относятся к конкретному туру, если передан параметр `tourId`.

// Пример кода для реализации конечной точки GET:

exports.getAllReviews = catchAsync(async (req, res, next) => {
    // Инициализация фильтра по умолчанию (пустой объект)
    let filter = {};

    // Если в параметрах запроса есть `tourId`, устанавливаем фильтр для поиска по туру
    if (req.params.tourId) filter = { tour: req.params.tourId };

    // Находим все отзывы, соответствующие фильтру
    const reviews = await Review.find(filter);

    // Отправляем успешный ответ со статусом 200 и данными отзывов
    res.status(200).json({
        status: "success",
        results: reviews.length,
        data: {
            reviews,
        },
    });
});

// Объяснение кода:

// 1. Использование `catchAsync`
// Функция `catchAsync` оборачивает асинхронный обработчик, упрощая обработку ошибок. В случае ошибки она передаст её в middleware для обработки ошибок.

// 2. Фильтрация по `tourId`
// В случае если в URL запроса есть `tourId` (например, `/api/tours/:tourId/reviews`), функция добавляет фильтр по этому полю.
// Это позволяет получить все отзывы для определенного тура.

// 3. Получение отзывов с использованием `Review.find()`
// Метод `find()` возвращает все документы, соответствующие заданному фильтру, или все документы, если фильтр пуст.

// 4. Формат ответа
// Ответ включает статус выполнения, количество найденных отзывов, и сами данные отзывов, что позволяет клиенту легко работать с данными.

// Пример использования этой конечной точки:

// 1. Получение всех отзывов для конкретного тура:
// GET /api/tours/1234/reviews
// Этот запрос вернет все отзывы для тура с идентификатором `1234`.

// 2. Получение всех отзывов, независимо от тура:
// GET /api/reviews
// Этот запрос вернет все отзывы в базе данных.

// Итог:
// Создание вложенной конечной точки GET с использованием Mongoose позволяет гибко управлять отзывами,
// предоставляя возможность как для общего, так и для конкретного поиска по туру.
