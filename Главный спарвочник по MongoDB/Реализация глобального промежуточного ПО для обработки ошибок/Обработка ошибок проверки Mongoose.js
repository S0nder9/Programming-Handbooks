// Глава 1: Введение в MongoDB - Обработка ошибок проверки Mongoose

// При работе с MongoDB и Mongoose важно правильно обрабатывать ошибки, чтобы улучшить пользовательский опыт и обеспечить правильную валидацию данных.
// В этой главе мы рассмотрим, как обрабатывать ошибки валидации данных, используя Mongoose, и как реализовать middleware для обработки ошибок в приложении.

// Пример функции для обработки ошибок валидации в Mongoose:
const handleValidationErrorDB = (err) => {
    // Извлекаем все сообщения об ошибках валидации из объекта ошибки
    const errors = Object.values(err.errors).map((data) => data.message);
    // Формируем итоговое сообщение об ошибке, объединяя все отдельные сообщения
    const message = `Invalid input data. ${errors.join(". ")}`;
    // Возвращаем новый экземпляр AppError с сообщением и статусом 400 (Bad Request)
    return new AppError(message, 400);
};

// Middleware для обработки ошибок
// Эта функция экспортируется и используется в качестве глобального обработчика ошибок в приложении.
module.exports = (err, req, res, next) => {
    // Устанавливаем статус ошибки, если он не задан, по умолчанию 500 (Internal Server Error)
    err.statusCode = err.statusCode || 500;
    err.status = err.status || "error";

    // Если приложение работает в режиме разработки, отправляем более подробное сообщение об ошибке
    if (process.env.NODE_ENV === "development") {
        sendErrorDev(err, res);
    } 
    // Если приложение работает в режиме продакшн, используем безопасный формат для ошибок
    else if (process.env.NODE_ENV === "production") {
        // Копируем объект ошибки, чтобы не изменить оригинальный
        let error = { ...err };

        // Обработка ошибок, связанных с неправильными типами данных
        if (error.name === "CastError") {
            error = handleCastErrorDB(error);
        }

        // Обработка ошибок дубликатов (например, если уникальное поле повторяется)
        if (error.code === 11000) {
            error = handleDuplicateFieldsDB(error);
        }

        // Обработка ошибок валидации
        if (error.name === "ValidationError") {
            error = handleValidationErrorDB(error);
        }

        // Отправляем ответ с обработанной ошибкой
        sendErrorProd(error, res);
    }
};

// Разбор компонентов:

// 1. handleValidationErrorDB:
// Эта функция обрабатывает ошибки валидации, которые возникают, когда данные не соответствуют схеме Mongoose.
// Она извлекает все сообщения об ошибках и объединяет их в одно сообщение.

// 2. Глобальный обработчик ошибок:
// Он проверяет статус ошибки и в зависимости от окружения (разработка или продакшн) возвращает подходящий ответ.
// В режиме разработки возвращается подробная информация, тогда как в продакшн-режиме возвращается более безопасная информация.

// Итог:
// Правильная обработка ошибок в Mongoose помогает поддерживать высокое качество данных и упрощает отладку.
// Обработка ошибок валидации, дубликатов и некорректных типов данных делает приложение более надежным и понятным для пользователей.
