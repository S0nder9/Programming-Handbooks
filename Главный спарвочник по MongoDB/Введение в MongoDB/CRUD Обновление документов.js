// Глава 1: Введение в MongoDB - CRUD Обновление документов в cmd и $ подробно

// MongoDB является документной базой данных, которая позволяет легко выполнять операции CRUD (Create, Read, Update, Delete).
// В этой главе мы рассмотрим, как обновлять документы в MongoDB, используя командную строку (cmd) и операторы обновления, такие как $set и $inc.

// Обновление документов в MongoDB:

// 1. Обновление одного документа
// Для обновления одного документа используйте метод `updateOne()`. Этот метод позволяет обновить первый документ, который соответствует заданному условию.
// Пример обновления одного документа с использованием $set:
db.collection('users').updateOne(
    { username: 'johndoe' }, // Условие поиска
    { $set: { email: 'john.doe@example.com' } } // Обновление поля email
  );
  
  // Обновление документа с использованием cmd в MongoDB:
  > use mydatabase
  > db.users.updateOne(
    { username: 'johndoe' },
    { $set: { email: 'john.doe@example.com' } }
  );
  
  // 2. Обновление нескольких документов
  // Для обновления нескольких документов используйте метод `updateMany()`. Этот метод обновляет все документы, которые соответствуют заданному условию.
  // Пример обновления нескольких документов с использованием $set:
  db.collection('users').updateMany(
    { status: 'inactive' }, // Условие поиска
    { $set: { status: 'active' } } // Обновление поля status
  );
  
  // Обновление нескольких документов с использованием cmd в MongoDB:
  > db.users.updateMany(
    { status: 'inactive' },
    { $set: { status: 'active' } }
  );
  
  // 3. Использование оператора $set
  // Оператор $set используется для обновления значений полей. Если поле не существует, оно будет добавлено.
  // Пример использования $set для обновления или добавления поля:
  db.collection('users').updateOne(
    { username: 'johndoe' },
    { $set: { age: 30 } }
  );
  
  // 4. Использование оператора $inc
  // Оператор $inc используется для увеличения или уменьшения числового значения поля. Он может быть полезен для счетчиков и других операций, требующих арифметических изменений.
  // Пример использования $inc для увеличения возраста пользователя:
  db.collection('users').updateOne(
    { username: 'johndoe' },
    { $inc: { age: 1 } }
  );
  
  // 5. Использование оператора $unset
  // Оператор $unset используется для удаления поля из документа.
  // Пример использования $unset для удаления поля age:
  db.collection('users').updateOne(
    { username: 'johndoe' },
    { $unset: { age: "" } }
  );
  
  // 6. Использование оператора $push
  // Оператор $push используется для добавления элемента в массив. Он может добавить элемент в конец массива или добавить его, если массив отсутствует.
  // Пример использования $push для добавления элемента в массив:
  db.collection('users').updateOne(
    { username: 'johndoe' },
    { $push: { hobbies: 'reading' } }
  );
  
  // 7. Использование оператора $pull
  // Оператор $pull используется для удаления элемента из массива, который соответствует заданному условию.
  // Пример использования $pull для удаления элемента из массива:
  db.collection('users').updateOne(
    { username: 'johndoe' },
    { $pull: { hobbies: 'reading' } }
  );
  
  // Итог:
  // В MongoDB для обновления документов можно использовать методы `updateOne()` и `updateMany()` с различными операторами, такими как $set, $inc, $unset, $push и $pull.
  // Эти методы и операторы позволяют гибко и эффективно обновлять данные в вашей базе данных.
  