// Глава 1: Введение в MongoDB
// Что такое MongoDB

// MongoDB - это документно-ориентированная NoSQL база данных, которая хранит данные в формате BSON (Binary JSON).
// Она предназначена для работы с неструктурированными и полу-структурированными данными и предоставляет гибкость в работе с данными.

// Основные особенности MongoDB:

// 1. Документная модель данных
// MongoDB использует коллекции и документы для хранения данных. Документ в MongoDB - это набор пар "ключ-значение", аналогичный JSON-объектам.
// Коллекция - это группа документов, которые могут иметь разные структуры.
// Пример документа в MongoDB:
const document = {
    name: 'Alice',
    age: 30,
    address: {
      street: '123 Main St',
      city: 'Wonderland'
    }
  };
  
  // 2. Гибкость схемы
  // В MongoDB схема данных не жестко задана. Вы можете добавлять новые поля в документы без изменения структуры всей коллекции.
  // Это позволяет легко адаптировать структуру данных по мере необходимости.
  // Пример добавления нового поля:
  const document = {
    name: 'Alice',
    age: 30,
    address: {
      street: '123 Main St',
      city: 'Wonderland'
    },
    email: 'alice@example.com' // Новое поле
  };
  
  // 3. Масштабируемость
  // MongoDB поддерживает горизонтальное масштабирование с помощью шардирования. Это позволяет распределять данные по нескольким серверам для улучшения производительности и масштабируемости.
  // Пример шардирования:
  db.collection.createIndex({ shardKey: 1 }); // Создание индекса для шардирования
  
  // 4. Высокая доступность
  // MongoDB обеспечивает высокую доступность с помощью репликации. Репликация позволяет создавать несколько копий данных на разных серверах, что обеспечивает отказоустойчивость и резервное копирование.
  // Пример создания реплики:
  rs.initiate(); // Инициализация репликационного набора
  
  // 5. Интерактивные запросы
  // MongoDB поддерживает богатый набор запросов для поиска и манипуляции данными. Вы можете выполнять сложные запросы, фильтрацию, агрегацию и сортировку данных.
  // Пример запроса с фильтрацией:
  db.collection.find({ age: { $gt: 25 } }); // Найти все документы, где возраст больше 25
  
  // 6. Индексы
  // MongoDB поддерживает создание индексов для ускорения поиска и обработки запросов. Вы можете создавать индексы по одному или нескольким полям.
  // Пример создания индекса:
  db.collection.createIndex({ name: 1 }); // Создание индекса по полю 'name'
  
  // Итог:
  // MongoDB - это мощная NoSQL база данных, которая предлагает гибкость в работе с данными, поддержку масштабируемости и высокой доступности.
  // Она идеальна для приложений, требующих динамической схемы данных и возможности масштабирования.
  