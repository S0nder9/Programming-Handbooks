// Глава 1: Введение в MongoDB (mongoose) - Виртуальные экскурсии и обзоры

// Виртуальные свойства и виртуальные поля в mongoose позволяют добавлять вычисляемые или виртуальные данные к документам.
// В этой главе рассмотрим, как создать виртуальные свойства для дополнительных данных и ссылки на связанные коллекции.

// Создание схемы тура с виртуальными свойствами

// Импорт mongoose для работы с базой данных MongoDB
const mongoose = require('mongoose');
const { Schema } = mongoose;

// Определяем схему для модели "Tour"
const tourSchema = new Schema({
  name: {
    type: String,
    required: [true, 'A tour must have a name'],
  },
  duration: {
    type: Number,
    required: [true, 'A tour must have a duration'],
  },
  price: {
    type: Number,
    required: [true, 'A tour must have a price'],
  },
  // Другие поля могут быть добавлены по необходимости
});

// Создание виртуального свойства для вычисления продолжительности тура в неделях
// Это свойство вычисляется на основе существующего значения продолжительности
tourSchema.virtual("durationWeeks").get(function () {
  return this.duration / 7;
});

// Обзор виртуальных свойств:
// - Они не хранятся в базе данных, но добавляются при получении документа.
// - Могут быть полезны для представления данных в удобном для пользователя формате.

// Создание виртуального свойства для связывания с коллекцией "Review"
// Это виртуальное поле ссылается на модель "Review" по полю "tour" в коллекции отзывов
tourSchema.virtual("reviews", {
  ref: "Review",         // Модель, с которой связывается
  foreignField: "tour",  // Поле в модели "Review", соответствующее полю связи
  localField: "_id",     // Поле текущей схемы, которое используется для связи
});

// Виртуальные связи позволяют получать данные из связанных коллекций без их хранения в основном документе.
// Они особенно полезны для связей "один ко многим", например, при создании списка отзывов для каждого тура.

// Итог:
// Виртуальные свойства mongoose дают возможность добавлять вычисляемые данные и ссылки на другие коллекции без сохранения этих данных в базе.
// Используйте их, чтобы улучшить читаемость и структуру данных вашего приложения, особенно для создания связей и представления информации в более удобном виде.

module.exports = mongoose.model('Tour', tourSchema);
