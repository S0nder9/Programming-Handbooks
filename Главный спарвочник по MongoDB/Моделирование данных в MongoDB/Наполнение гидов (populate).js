// Глава 1: Введение в MongoDB (Mongoose) - Наполнение гидов

// Метод .populate() в Mongoose используется для автоматического добавления данных, связанных с документом из другой коллекции, к результатам запроса.
// Это позволяет связать коллекции и получить связанные данные, как если бы это была одна коллекция.

// Рассмотрим, как работает .populate() на примере следующих кодов:

// Пример 1: Использование .populate() внутри контроллера

exports.getTour = catchAsync(async (req, res, next) => {
    const tour = await Tour.findById(req.params.id).populate({
      path: "guides", // Связанный путь — указывает, какую коллекцию подгрузить (в данном случае "guides")
      select: "-__v -passwordChangedAt" // Исключает указанные поля из результата, в данном случае "__v" и "passwordChangedAt"
    });
  
    if (!tour) {
      return next(new AppError("Tour not found", 404));
    }
  
    res.status(200).json({
      status: "success",
      data: {
        tour,
      },
    });
  });
  
  // В данном примере мы подгружаем данные "guides", связанные с определенным туром.
  // Mongoose использует метод populate, чтобы автоматически заполнить документ "tour" информацией о его гидах из коллекции "guides".
  // Поля "__v" и "passwordChangedAt" будут исключены из результата, чтобы не отображать лишнюю или чувствительную информацию.
  
  // Пример 2: Использование .populate() в хуке Mongoose (на уровне схемы)
  
  tourSchema.pre(/^find/, function (next) {
    this.populate({
      path: "guides",
      select: "-__v -passwordChangedAt"
    });
  
    next();
  });
  
  // В этом случае мы применяем .populate() ко всем запросам, которые начинаются с "find" (например, findOne, findById).
  // Каждый раз, когда будет выполнен запрос на поиск "tour", информация о гидах будет подгружена автоматически, упрощая код в контроллерах.
  
  // Объяснение параметров .populate():
  
  // 1. path: "guides"
  //    - Этот параметр указывает, какие данные следует подгружать из другой коллекции.
  //    - В данном случае "guides" указывает на коллекцию гидов, связанную с "tour".
  
  // 2. select: "-__v -passwordChangedAt"
  //    - Параметр select используется для управления полями, которые будут включены или исключены из подгружаемых данных.
  //    - В данном примере "-__v" и "-passwordChangedAt" означают исключение этих полей из результата.
  //    - Символ "-" перед именем поля означает "исключить", а отсутствие "-" добавляет поле к результату (если требуется включить дополнительные поля).
  
  // Итог:
  // Метод .populate() в Mongoose позволяет автоматизировать подгрузку связанных данных из других коллекций, упрощая связь между документами.
  // Использование populate облегчает процесс запроса и выводит информацию из связанных коллекций в одном ответе.
  // Это особенно удобно в случаях, когда нужно исключить или включить определенные поля для повышения безопасности и оптимизации данных.
  