// Глава 1: Введение в MongoDB (mongoose) - Моделирование гидов Встраивание

// В MongoDB при помощи Mongoose можно моделировать данные, включая отношения между документами.
// В этой главе мы рассмотрим пример, в котором встроим информацию о "гидах" (guides) внутри схемы тура (tourSchema).
// Мы будем использовать Mongoose для асинхронного поиска гидов в базе данных и встраивания их данных в поле guides перед сохранением.

// Шаги для создания схемы тура с встроенными данными о гидах:

// 1. Определяем схему тура (tourSchema) и добавляем в неё поле guides для хранения массива гидов.
// 2. Перед сохранением документа, мы с помощью middleware-функции 'pre("save")' находим гидов по ID, которые содержатся в поле guides.
// 3. Мы заменяем массив guides в документе на массив с полными данными о каждом гиде, используя Promise.all для выполнения поиска асинхронно.

// Импортируем mongoose
const mongoose = require('mongoose');
const User = require('./User'); // Модель пользователя для поиска гидов по ID

// Определяем схему тура
const tourSchema = new mongoose.Schema({
    name: {
        type: String,
        required: [true, 'Tour name is required']
    },
    guides: [
        {
            type: mongoose.Schema.Types.ObjectId,
            ref: 'User'
        }
    ],
    // Другие поля схемы тура...
});

// Middleware для встраивания гидов в поле guides перед сохранением тура
tourSchema.pre("save", async function (next) {
    // Создаем массив промисов для поиска каждого гида по его ID
    const guidesPromises = this.guides.map(async id => {
        return await User.findById(id);
    });
    
    // Ожидаем выполнения всех промисов и заменяем this.guides на массив найденных гидов
    this.guides = await Promise.all(guidesPromises);
    
    next(); // Переходим к следующему middleware или к завершению сохранения
});

// Экспортируем модель тура
const Tour = mongoose.model('Tour', tourSchema);
module.exports = Tour;

// Объяснение:
// - `this.guides.map`: Проходим по каждому ID в массиве guides и возвращаем промис, выполняющий поиск гида по ID.
// - `Promise.all(guidesPromises)`: Ждем выполнения всех промисов для получения массива гидов.
// - `this.guides = ...`: Заменяем массив guides на массив объектов гидов, найденных в базе данных.
// - `next()`: Переходим к следующему middleware или завершаем сохранение документа.

// Итог:
// Данный код позволяет нам встраивать данные о гидах внутри документа тура, что упрощает доступ к информации о гидах.
// Встраивание данных может быть полезным, когда мы хотим снизить количество запросов к базе данных при получении информации о туре и его гидах.
