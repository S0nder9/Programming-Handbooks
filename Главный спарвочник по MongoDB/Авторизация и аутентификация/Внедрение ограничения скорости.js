// Глава 1: Введение в MongoDB (mongoose) - Внедрение ограничения скорости

// При работе с API важно внедрить защитные меры, чтобы предотвратить возможные атаки и защитить сервер от чрезмерной нагрузки.
// Один из способов защиты — это ограничение скорости запросов. Используя пакет `express-rate-limit`, можно установить лимит на количество запросов,
// которые клиент может отправить за определённое время.

// В данном примере будет установлен лимит на количество запросов с одного IP-адреса, чтобы ограничить нагрузку на сервер.

// Шаги для внедрения ограничения скорости:
// 1. Установите пакет express-rate-limit, если он ещё не установлен:
//    npm install express-rate-limit

// 2. Определите количество запросов, допустимых в течение определенного времени для одного IP-адреса:
//    NUMBER_OF_REQUESTS_ON_THE_SAME_IP_IN_ONE_HOUR=100

// 3. Настройте лимитер для ограничения скорости с использованием express-rate-limit:

const rateLimit = require('express-rate-limit');
const express = require('express');
const app = express();

const limiter = rateLimit({
    // Устанавливаем максимальное количество запросов, допустимых за час для одного IP
    max: process.env.NUMBER_OF_REQUESTS_ON_THE_SAME_IP_IN_ONE_HOUR || 100,
    windowMs: 60 * 60 * 1000, // 1 час в миллисекундах
    message: "Too many requests from this IP, please try again in an hour!",
});

// 4. Примените лимитер к API маршрутам
//    Пример: ограничение применяется ко всем маршрутам, начинающимся с /api/
app.use("/api/", limiter);

// Это ограничение скорости помогает предотвратить возможные атаки, такие как DDOS, и поддерживает стабильную работу сервера.

// Итог:
// Ограничение скорости — это простой, но эффективный способ защиты API.
// Внедряя ограничение количества запросов на одного клиента, можно снизить вероятность перегрузки сервера и повысить безопасность приложения.
