// Глава 1: Введение в MongoDB (mongoose) - Расчет среднего рейтинга в турах - часть 1

// В этой главе мы разберем, как рассчитать средний рейтинг для туров с помощью Mongoose и MongoDB.
// Расчет среднего рейтинга необходим для того, чтобы отобразить обобщенную оценку тура, основанную на отзывах пользователей.

// Задача:
// При добавлении нового отзыва необходимо обновить информацию о среднем рейтинге и количестве отзывов для конкретного тура.
// Мы можем достичь этого, используя статический метод в схеме отзывов (reviewSchema) и middleware (посредника) Mongoose, чтобы вызывать обновление после сохранения отзыва.

// Шаги реализации:

// 1. Создаем статический метод calcAverageRating для расчета среднего рейтинга.
// Этот метод принимает ID тура и использует MongoDB-агрегацию для расчета среднего значения рейтинга и общего количества отзывов для тура.

reviewSchema.statics.calcAverageRating = async function (tourId) {
  // Используем агрегацию для нахождения среднего рейтинга
  const stats = await this.aggregate([
      {
          // Отбираем отзывы только для указанного тура
          $match: { tour: tourId },
      },
      {
          // Группируем отзывы по ID тура и вычисляем количество отзывов и средний рейтинг
          $group: {
              _id: "$tour",
              nRating: { $sum: 1 },
              avgRating: { $avg: "$rating" },
          },
      },
  ]);

  // Обновляем данные о количестве и среднем рейтинге в документе тура
  if (stats.length > 0) {
    await Tour.findByIdAndUpdate(tourId, {
        ratingQuantity: stats[0].nRating,
        ratingAverage: stats[0].avgRating,
    });
} else {
    await Tour.findByIdAndUpdate(tourId, {
        ratingQuantity: 0,
        ratingAverage: 4.5,
    });
}
};

// 2. Используем middleware (post-хук) для вызова метода calcAverageRating после сохранения нового отзыва.
// Когда новый отзыв сохраняется, автоматически пересчитывается средний рейтинг тура.

reviewSchema.post("save", async function () {
  // Вызываем calcAverageRating с ID тура для обновления данных
  await this.constructor.calcAverageRating(this.tour);
});

// Объяснение:
// - Статический метод calcAverageRating выполняет агрегацию по полю "tour", чтобы найти все отзывы для конкретного тура, и затем группирует их по ID тура.
// - В результате агрегации создается объект stats, который содержит два основных параметра: количество отзывов (nRating) и средний рейтинг (avgRating).
// - После выполнения агрегации мы обновляем документ тура с помощью метода findByIdAndUpdate, чтобы сохранить полученные значения среднего рейтинга и количества отзывов в базе данных.
// - post-хук "save" срабатывает после того, как новый отзыв сохраняется, что обеспечивает актуальность рейтинга при добавлении каждого нового отзыва.

// Итог:
// Используя данный подход, мы можем автоматически обновлять средний рейтинг и количество отзывов для тура при добавлении новых отзывов, обеспечивая точность и актуальность данных.
