// Глава 8: Расширенные возможности Canvas

// Подглава 8.1: Композитные операции
// - Определение и применение глобальных композитных операций

// В HTML5 Canvas API доступны различные методы для рисования и манипулирования графическими элементами на холсте.
// Одной из мощных функций Canvas API являются композитные операции, которые позволяют изменять способ смешивания изображений и цвета.

// Определение композитных операций:
// Композитные операции управляют тем, как один слой графики (или "рисунок") смешивается с другим. 
// Это осуществляется с помощью свойства globalCompositeOperation контекста рисования.

// Доступные значения свойства globalCompositeOperation:
// 1. **source-over** (по умолчанию): Рисунок добавляется поверх существующего содержимого.
// 2. **source-in**: Рисунок отображается только там, где он пересекается с существующим содержимым.
// 3. **source-out**: Рисунок отображается только в тех областях, где он не пересекается с существующим содержимым.
// 4. **source-atop**: Рисунок отображается поверх существующего содержимого, но только в тех областях, где они пересекаются.
// 5. **destination-over**: Рисунок добавляется под существующим содержимым.
// 6. **destination-in**: Существующее содержимое отображается только там, где оно пересекается с рисунком.
// 7. **destination-out**: Удаляет области существующего содержимого, которые пересекаются с рисунком.
// 8. **destination-atop**: Существующее содержимое отображается поверх рисунка в областях пересечения.
// 9. **lighter**: Рисунок смешивается с существующим содержимым, создавая эффект смешивания, который делает области светлее.
// 10. **copy**: Существующее содержимое заменяется рисунком.
// 11. **xor**: Рисунок и существующее содержимое смешиваются по принципу исключающего ИЛИ, создавая эффект пересечения.

// Примеры применения глобальных композитных операций:

// Создание элемента Canvas и получения контекста рисования
const canvas = document.createElement('canvas');
const ctx = canvas.getContext('2d');
document.body.appendChild(canvas);
canvas.width = 500;
canvas.height = 500;

// Функция для применения различных композитных операций
const applyCompositeOperation = (operation) => {
  ctx.clearRect(0, 0, canvas.width, canvas.height); // Очистка холста

  ctx.fillStyle = 'blue';
  ctx.fillRect(50, 50, 200, 200); // Рисуем синий квадрат

  ctx.globalCompositeOperation = operation;

  ctx.fillStyle = 'red';
  ctx.fillRect(100, 100, 200, 200); // Рисуем красный квадрат

  ctx.globalCompositeOperation = 'source-over'; // Восстановление стандартного режима
};

// Применение различных композитных операций:
applyCompositeOperation('source-over'); // Операция по умолчанию
applyCompositeOperation('source-in'); // Смешивание по принципу source-in
applyCompositeOperation('destination-over'); // Добавление под существующее содержимое
applyCompositeOperation('lighter'); // Смешивание по принципу lighter
applyCompositeOperation('xor'); // Смешивание по принципу xor

// Итог:
// Глобальные композитные операции в Canvas API позволяют контролировать, как рисунки и цвета смешиваются между собой.
// Используйте свойства globalCompositeOperation для создания различных визуальных эффектов в графике на Canvas.
// Эти операции могут быть полезны для создания сложных графических эффектов, таких как наложение изображений, маскирование и смешивание цветов.
