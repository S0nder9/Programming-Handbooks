// Глава 13: Модуль stream - Передача файла клиенту по HTTP в потоке в Node.js

// В Node.js модуль stream используется для обработки потоковых данных, что позволяет эффективно работать с большими объемами данных.
// Это особенно полезно для передачи файлов по HTTP, так как позволяет передавать данные по частям, не загружая весь файл в память.

// Как работает передача файла в потоке:
// 1. Создаем HTTP-сервер, который будет обрабатывать запросы клиентов.
// 2. Используем модуль fs (файловая система) для чтения файла в виде потока.
// 3. Читаем файл по частям и передаем данные клиенту через HTTP-ответ.

// Пример передачи файла клиенту по HTTP в потоке:
const http = require('http');
const fs = require('fs');
const path = require('path');

// Создаем HTTP-сервер
const server = http.createServer((req, res) => {
  // Путь к файлу, который нужно передать клиенту
  const filePath = path.join(__dirname, 'example.txt');

  // Проверяем, что запрос сделан по правильному пути
  if (req.url === '/download') {
    // Читаем файл в виде потока
    const readStream = fs.createReadStream(filePath);

    // Устанавливаем заголовки для ответа
    res.writeHead(200, {
      'Content-Type': 'text/plain',
      'Content-Disposition': 'attachment; filename="example.txt"',
    });

    // Передаем данные файла клиенту по частям
    readStream.pipe(res);

    // Обрабатываем ошибки чтения файла
    readStream.on('error', (err) => {
      console.error('Ошибка чтения файла:', err);
      res.writeHead(500, { 'Content-Type': 'text/plain' });
      res.end('Ошибка сервера');
    });
  } else {
    // Если запрос сделан по другому пути, возвращаем 404
    res.writeHead(404, { 'Content-Type': 'text/plain' });
    res.end('Страница не найдена');
  }
});

// Запускаем сервер на порту 3000
server.listen(3000, () => {
  console.log('Сервер запущен на http://localhost:3000');
});

// Итог:
// Использование модулей stream и fs позволяет эффективно передавать файлы по HTTP в Node.js.
// Это обеспечивает высокую производительность и минимальное использование памяти, так как данные передаются по частям.
