// Глава 15: Переменные среды - Использование import - as в модулях ES6 в Node.js

// Переменные среды используются для хранения конфигурационных данных и секретов,
// таких как ключи API, пароли и другие данные, которые не должны быть жестко закодированы в вашем приложении.
// В Node.js можно использовать переменные среды для управления конфигурацией на различных средах выполнения (разработка, тестирование, производство).

// Как работают переменные среды:
// Переменные среды устанавливаются в операционной системе и доступны в процессе Node.js через объект process.env.
// Их можно устанавливать различными способами, в том числе через командную строку, файлы конфигурации или инструменты управления средой, такие как dotenv.

// Пример использования переменных среды:
const apiKey = process.env.API_KEY;

if (!apiKey) {
  throw new Error('API_KEY не установлена');
}

console.log(`Ваш ключ API: ${apiKey}`);

// Использование dotenv для загрузки переменных среды из файла .env:
require('dotenv').config();

const dbPassword = process.env.DB_PASSWORD;

if (!dbPassword) {
  throw new Error('DB_PASSWORD не установлена');
}

console.log(`Ваш пароль базы данных: ${dbPassword}`);

// Модули ES6 и import - as:
// В ES6 модульная система была введена с ключевыми словами import и export.
// Node.js поддерживает модули ES6, что позволяет использовать более современные синтаксические возможности для организации кода.
// Синтаксис import - as позволяет импортировать модули и давать им локальные имена.

// Пример использования import - as:
import { readFile as read } from 'fs/promises';

const readConfigFile = async () => {
  try {
    const data = await read('./config.json', 'utf-8');
    console.log('Конфигурационный файл загружен:', data);
  } catch (error) {
    console.error('Ошибка при чтении конфигурационного файла:', error);
  }
};

readConfigFile();

// Использование import - as с собственными модулями:
import { myFunction as customFunction } from './myModule';

customFunction(); // Вызовет функцию myFunction из модуля myModule

// Итог:
// Переменные среды являются важной частью управления конфигурацией приложений Node.js.
// С использованием ES6 модулей и синтаксиса import - as, можно улучшить структуру и читаемость вашего кода,
// а также лучше управлять зависимостями и именами импортируемых модулей.
