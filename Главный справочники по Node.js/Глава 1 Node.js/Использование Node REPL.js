// Глава 1: Node.js

// Использование Node REPL

// Node.js REPL (Read-Eval-Print Loop) - это интерактивная оболочка, которая позволяет вводить команды Node.js,
// исполнять их и выводить результат в реальном времени. Это полезный инструмент для быстрого тестирования 
// кода, проверки синтаксиса и изучения возможностей Node.js.

// 1. Запуск Node REPL

// Чтобы запустить Node REPL, откройте командную строку или терминал и введите команду:
node

// После этого вы увидите приглашение к вводу кода, обычно это знак '>'.

// Пример:
> console.log('Hello, Node.js!');
Hello, Node.js!
undefined

// 2. Основные команды и функции Node REPL

// В Node REPL можно вводить любые корректные команды JavaScript и Node.js. Рассмотрим основные возможности.

// 2.1. Выполнение простых команд
// Вы можете выполнять любые команды JavaScript и видеть результат сразу.

> 2 + 2
4

> const a = 10;
undefined

> a * 2
20

// 2.2. Подсказки по командам
// Введите '.help' для получения списка всех доступных команд в Node REPL.

> .help
// .break    - выход из многострочного ввода
// .clear    - выход из многострочного ввода
// .editor   - запуск редактора
// .exit     - выход из REPL
// .help     - получение помощи по командам
// .load     - загрузка файла JavaScript в REPL
// .save     - сохранение текущей сессии REPL в файл

// 2.3. Завершение работы
// Введите '.exit' или нажмите Ctrl+C дважды для выхода из Node REPL.

> .exit

// 3. Многострочный ввод

// В Node REPL можно вводить многострочные выражения. Для этого начните ввод с '{' или используйте команду '.editor'.

> {
... const x = 5;
... const y = 10;
... x + y;
... }
15

// 4. Загрузка и сохранение сессий

// Вы можете загрузить JavaScript файл и выполнить его в текущей сессии REPL с помощью команды '.load'.
// Сессии можно сохранять в файл с помощью команды '.save'.

> .save mySession.js
// Сохраняет текущую сессию в файл mySession.js

> .load mySession.js
// Загружает и выполняет команды из файла mySession.js

// 5. Работа с редактором

// В Node REPL есть встроенный редактор. Используйте команду '.editor', чтобы войти в режим редактирования.

> .editor
// Entering editor mode (Ctrl+D to finish, Ctrl+C to cancel)
// Напишите ваш код, например:
const a = 10;
const b = 20;
a + b;
^D // Нажмите Ctrl+D для завершения режима редактора
30

// 6. Автозаполнение

// Node REPL поддерживает автозаполнение команд. Начните вводить команду и нажмите Tab для отображения возможных вариантов.

> consol // Нажмите Tab
console

// 7. Доступ к глобальным объектам

// В Node REPL можно обращаться к глобальным объектам и модулям Node.js.

> process.version
'v16.3.0'

> Buffer.from('Hello')
<Buffer 48 65 6c 6c 6f>

// Итог:
// Node REPL - мощный инструмент для быстрого прототипирования и тестирования кода на Node.js.
// Он предоставляет интерактивную среду, в которой можно выполнять JavaScript команды, загружать и сохранять сессии,
// работать с редактором и использовать автозаполнение для удобства ввода команд.

