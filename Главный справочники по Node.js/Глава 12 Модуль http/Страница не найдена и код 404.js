// Глава 12: Модуль http - Страница не найдена и код 404 в Node.js

// В Node.js модуль http используется для создания веб-серверов.
// Одной из важных задач при разработке веб-серверов является обработка ситуаций, когда запрашиваемая страница не найдена.
// В таких случаях сервер должен возвращать код состояния HTTP 404.

// Как работать с кодом 404 в Node.js:
// Когда сервер не может найти запрашиваемый ресурс, он должен вернуть страницу с ошибкой 404.
// Это достигается путем проверки URL запроса и возвращения соответствующего ответа, если ресурс не найден.

// Пример создания веб-сервера и обработки ошибки 404:
const http = require('http');

// Создаем сервер
const server = http.createServer((req, res) => {
  // Устанавливаем заголовок ответа как текст/HTML
  res.setHeader('Content-Type', 'text/html');
  
  if (req.url === '/') {
    // Главная страница
    res.statusCode = 200;
    res.end('<h1>Главная страница</h1>');
  } else if (req.url === '/about') {
    // Страница "О нас"
    res.statusCode = 200;
    res.end('<h1>О нас</h1>');
  } else {
    // Если запрашиваемый URL не найден
    res.statusCode = 404;
    res.end('<h1>404 - Страница не найдена</h1>');
  }
});

// Сервер прослушивает запросы на порту 3000
server.listen(3000, () => {
  console.log('Сервер запущен на http://localhost:3000');
});

// Пример запроса к серверу:
// - Перейдя по URL http://localhost:3000/, вы увидите "Главная страница"
// - Перейдя по URL http://localhost:3000/about, вы увидите "О нас"
// - Перейдя по любому другому URL, например, http://localhost:3000/unknown, вы увидите "404 - Страница не найдена"

// Итог:
// В Node.js модуль http позволяет легко создать веб-сервер и обрабатывать ошибки 404.
// При разработке веб-приложений важно правильно обрабатывать запросы к несуществующим страницам и возвращать соответствующий код состояния HTTP 404.
