// Глава 14: NPM - Каталог node_modules в Node.js

// Введение:
// В Node.js, каталог node_modules является важным компонентом, в котором хранятся все зависимости, установленные через npm (Node Package Manager).
// Эти зависимости могут включать библиотеки, фреймворки и различные утилиты, необходимые для работы вашего проекта.

// Как работает каталог node_modules:
// Когда вы устанавливаете пакет с помощью npm, он загружается и сохраняется в каталоге node_modules.
// Этот каталог создается в корневой директории вашего проекта и содержит все установленные зависимости.

// Установка пакетов:
// Вы можете установить пакеты с помощью команды npm install <package-name>.
// Установленный пакет будет добавлен в каталог node_modules.
// Например, установка пакета lodash:
npm install lodash

// В результате, пакет lodash будет загружен в node_modules, и вы сможете использовать его в вашем проекте:
const _ = require('lodash');
console.log(_.random(1, 100)); // Выводит случайное число от 1 до 100

// Структура каталога node_modules:
// Каталог node_modules имеет древовидную структуру, где каждый пакет имеет свою собственную папку.
// Внутри каждой папки пакета находятся файлы и другие зависимости, необходимые для работы пакета.

// Пример структуры каталога node_modules:
// node_modules/
// ├── lodash/
// │   ├── lodash.js
// │   └── package.json
// ├── express/
// │   ├── lib/
// │   ├── index.js
// │   └── package.json
// └── ... другие пакеты ...

// package.json:
// Файл package.json в вашем проекте содержит список всех зависимостей, которые используются в проекте.
// Когда вы устанавливаете новый пакет, он добавляется в раздел dependencies в package.json.
{
  "name": "my-project",
  "version": "1.0.0",
  "dependencies": {
    "lodash": "^4.17.21",
    "express": "^4.17.1"
  }
}

// Управление зависимостями:
// Вы можете обновлять, удалять и проверять установленные зависимости с помощью команд npm.
// Команда для удаления пакета:
npm uninstall <package-name>

// Команда для обновления пакета:
npm update <package-name>

// Важно отметить, что удаление каталога node_modules и повторная установка зависимостей с помощью команды npm install приведет к восстановлению всех пакетов, указанных в package.json.

// Итог:
// Каталог node_modules является ключевым компонентом управления зависимостями в Node.js проектах.
// Понимание его структуры и работы помогает эффективно управлять зависимостями и поддерживать проект в актуальном состоянии.
