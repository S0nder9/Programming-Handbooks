// Глава 14: NPM - Менеджер пакетов в Node.js

// NPM (Node Package Manager) - это менеджер пакетов для JavaScript, который позволяет управлять зависимостями и пакетами в проектах Node.js.
// Он используется для установки, обновления, удаления и публикации пакетов.

// Установка пакетов:
// Для установки пакетов используется команда npm install.
// Можно установить пакет глобально или локально в проект.

// Пример установки пакета локально:
npm install lodash

// Пример установки пакета глобально:
npm install -g nodemon

// После установки пакетов создается файл package.json, который содержит информацию о проекте и его зависимостях.

// package.json:
// Файл package.json - это конфигурационный файл проекта, который содержит метаданные проекта и список зависимостей.

// Пример package.json:
{
  "name": "my-project",
  "version": "1.0.0",
  "description": "Описание проекта",
  "main": "index.js",
  "scripts": {
    "start": "node index.js"
  },
  "dependencies": {
    "lodash": "^4.17.21"
  },
  "devDependencies": {
    "nodemon": "^2.0.7"
  }
}

// Скрипты NPM:
// В разделе "scripts" в package.json можно определить пользовательские команды, которые можно запускать с помощью npm.

// Пример использования скриптов:
{
  "scripts": {
    "start": "node index.js",
    "dev": "nodemon index.js"
  }
}

// Запуск скрипта:
npm run dev

// Публикация пакетов:
// NPM позволяет публиковать свои пакеты в репозиторий NPM, чтобы другие разработчики могли использовать их.

// Пример публикации пакета:
// 1. Создайте аккаунт на сайте npmjs.com
// 2. Войдите в свой аккаунт через терминал:
npm login

// 3. Убедитесь, что в вашем проекте есть файл package.json.
// 4. Опубликуйте пакет:
npm publish

// Обновление пакетов:
// Для обновления пакетов используется команда npm update.

// Пример обновления всех пакетов в проекте:
npm update

// Удаление пакетов:
// Для удаления пакетов используется команда npm uninstall.

// Пример удаления пакета:
npm uninstall lodash

// Итог:
// NPM является мощным инструментом для управления зависимостями и пакетами в проектах Node.js.
// Он упрощает установку, обновление, удаление и публикацию пакетов, а также позволяет управлять скриптами и конфигурацией проекта.
