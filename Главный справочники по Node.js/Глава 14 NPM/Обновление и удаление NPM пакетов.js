// Глава 14: NPM - Обновление и удаление NPM пакетов в Node.js

// NPM (Node Package Manager) позволяет управлять зависимостями в проектах Node.js.
// Обновление и удаление пакетов является важной частью управления зависимостями.

// Обновление NPM пакетов:
// В NPM есть несколько способов обновить пакеты до последних версий.

// 1. Обновление пакетов до последних версий, указанных в package.json:
// Команда `npm update` обновляет пакеты до версий, указанных в package.json.

$ npm update

// 2. Обновление пакетов до последних доступных версий:
// Команда `npm install <package>@latest` обновляет конкретный пакет до последней доступной версии.

$ npm install <package>@latest

// 3. Обновление всех пакетов до последних доступных версий:
// Для обновления всех пакетов до последних доступных версий можно использовать инструмент `npm-check-updates` (ncu).

$ npm install -g npm-check-updates
$ ncu -u
$ npm install

// Пример обновления пакета:
$ npm install lodash@latest
// Эта команда обновит пакет lodash до последней доступной версии.

// Удаление NPM пакетов:
// Удаление пакетов из проекта может быть выполнено с помощью команды `npm uninstall`.

// 1. Удаление пакета из проекта:
// Команда `npm uninstall <package>` удаляет пакет из node_modules и обновляет package.json.

$ npm uninstall <package>

// Пример удаления пакета:
$ npm uninstall lodash
// Эта команда удалит пакет lodash из проекта.

// 2. Удаление глобально установленных пакетов:
// Команда `npm uninstall -g <package>` удаляет глобально установленный пакет.

$ npm uninstall -g <package>

// Пример удаления глобально установленного пакета:
$ npm uninstall -g create-react-app
// Эта команда удалит глобально установленный пакет create-react-app.

// Итог:
// Обновление и удаление пакетов с помощью NPM позволяет поддерживать проект в актуальном состоянии и управлять зависимостями.
// Используйте `npm update` и `npm install <package>@latest` для обновления пакетов, а также `npm uninstall` для их удаления.
