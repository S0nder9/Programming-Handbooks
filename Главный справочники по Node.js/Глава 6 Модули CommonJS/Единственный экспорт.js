// Глава 6: Модули CommonJS - Единственный экспорт

// В Node.js модули используются для организации кода в более мелкие, управляемые части.
// Один из способов экспорта данных из модуля - использование единственного экспорта.
// Это позволяет экспортировать одну функцию, объект или значение из модуля.

// Как работают модули с единственным экспортом:
// В Node.js каждый файл считается модулем.
// Чтобы экспортировать единственный объект, функцию или значение, используется объект module.exports.
// module.exports является пустым объектом по умолчанию, который можно переопределить.

// Пример единственного экспорта функции:
const myFunction = () => {
  console.log('Hello from myFunction');
};

module.exports = myFunction;

// В другом файле можно импортировать этот модуль с помощью require:
const importedFunction = require('./myModule');
importedFunction(); // Выведет: Hello from myFunction

// Пример единственного экспорта объекта:
const myObject = {
  name: 'John',
  age: 30,
};

module.exports = myObject;

// В другом файле можно импортировать этот объект с помощью require:
const importedObject = require('./myModule');
console.log(importedObject.name); // Выведет: John

// Пример единственного экспорта значения:
const myValue = 42;

module.exports = myValue;

// В другом файле можно импортировать это значение с помощью require:
const importedValue = require('./myModule');
console.log(importedValue); // Выведет: 42

// Итог:
// Использование единственного экспорта позволяет легко экспортировать и импортировать одну функцию, объект или значение из модуля.
// Это удобно для организации кода и позволяет четко определить, что именно экспортируется из модуля.
