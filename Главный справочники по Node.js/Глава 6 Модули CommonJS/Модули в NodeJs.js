// Глава 6: Модули CommonJS - Модули в Node.js

// В Node.js модули играют ключевую роль в организации и структурировании кода.
// CommonJS - это спецификация модулей, которая определяет, как модули загружаются и как они взаимодействуют между собой.
// В Node.js используется система модулей CommonJS, которая позволяет разделять код на независимые модули.

// Основные концепции CommonJS:
// 1. require - используется для загрузки модулей.
// 2. module.exports - используется для экспорта объектов, функций или примитивов из модуля.

// Пример простого модуля:
// Создадим файл math.js с функциями для сложения и умножения чисел

// math.js
function add(a, b) {
    return a + b;
  }
  
  function multiply(a, b) {
    return a * b;
  }
  
  module.exports = {
    add,
    multiply,
  };
  
  // В этом примере мы экспортируем функции add и multiply, чтобы они могли быть использованы в других модулях.
  
  // Импорт и использование модуля:
  // Создадим файл app.js и импортируем в него наш модуль math.js
  
  // app.js
  const math = require('./math'); // импортируем наш модуль
  
  const sum = math.add(2, 3);
  const product = math.multiply(2, 3);
  
  console.log(`Сумма: ${sum}`); // Сумма: 5
  console.log(`Произведение: ${product}`); // Произведение: 6
  
  // В этом примере мы используем функцию require для загрузки нашего модуля math.js и вызываем функции add и multiply.
  
  // Общие подходы к структуре модулей:
  // Модули могут содержать как функции, так и данные. 
  // Вы можете организовать ваш код, разделяя его на различные модули, каждый из которых выполняет отдельную задачу.
  
  // Пример модуля с данными:
  // Создадим файл config.js с конфигурационными данными
  
  // config.js
  const config = {
    appName: 'MyApp',
    port: 3000,
  };
  
  module.exports = config;
  
  // Импорт и использование модуля с данными:
  // Создадим файл server.js и импортируем в него наш модуль config.js
  
  // server.js
  const http = require('http');
  const config = require('./config'); // импортируем наш конфигурационный модуль
  
  const server = http.createServer((req, res) => {
    res.writeHead(200, { 'Content-Type': 'text/plain' });
    res.end('Hello World\n');
  });
  
  server.listen(config.port, () => {
    console.log(`${config.appName} запущен на порту ${config.port}`);
  });
  
  // В этом примере мы используем модуль config.js для настройки нашего HTTP сервера.
  
  // Итог:
  // Модули CommonJS в Node.js позволяют организовать код в независимые и переиспользуемые блоки.
  // Использование require и module.exports позволяет легко загружать и экспортировать функции, объекты и данные между модулями.
  // Это делает код более структурированным, понятным и поддерживаемым.