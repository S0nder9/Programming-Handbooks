// Глава 10: Модуль events - Несколько слушателей для события в Node.js

// Модуль events в Node.js предоставляет функциональность для создания и обработки событий.
// Он позволяет создавать события, добавлять для них обработчики и генерировать события, которые могут быть пойманы слушателями.
// В этой главе рассмотрим, как добавлять несколько слушателей для одного события.

// Как работают события в модуле events:
// В Node.js каждое событие имеет связанные с ним слушатели (обработчики), которые реагируют на это событие.
// Слушатели добавляются с помощью метода `on()`, а событие генерируется с помощью метода `emit()`.
// Можно добавить несколько слушателей для одного события, и они будут вызваны в порядке добавления.

// Пример создания класса с несколькими слушателями для одного события:
const EventEmitter = require('events');

// Создаем экземпляр EventEmitter
const myEmitter = new EventEmitter();

// Добавляем несколько слушателей для одного события 'event1'
myEmitter.on('event1', () => {
  console.log('Слушатель 1 для event1');
});

myEmitter.on('event1', () => {
  console.log('Слушатель 2 для event1');
});

myEmitter.on('event1', () => {
  console.log('Слушатель 3 для event1');
});

// Генерируем событие 'event1', чтобы вызвать все добавленные слушатели
myEmitter.emit('event1');

// Выход:
// Слушатель 1 для event1
// Слушатель 2 для event1
// Слушатель 3 для event1

// Пример создания класса с несколькими событиями и слушателями:
class MyClass extends EventEmitter {
  constructor() {
    super();
    // Добавляем несколько слушателей для события 'event2'
    this.on('event2', () => {
      console.log('Слушатель 1 для event2');
    });

    this.on('event2', () => {
      console.log('Слушатель 2 для event2');
    });
  }

  triggerEvent() {
    this.emit('event2');
  }
}

const myInstance = new MyClass();
myInstance.triggerEvent();

// Выход:
// Слушатель 1 для event2
// Слушатель 2 для event2

// Метод `once()` позволяет добавить слушателя, который будет вызван только один раз:
myEmitter.once('event3', () => {
  console.log('Слушатель для event3 с once');
});

myEmitter.emit('event3');
myEmitter.emit('event3'); // Этот вызов не приведет к выполнению слушателя, так как он был вызван только один раз

// Выход:
// Слушатель для event3 с once

// Итог:
// Модуль events предоставляет мощные возможности для работы с событиями в Node.js.
// Вы можете добавлять несколько слушателей для одного события и использовать методы `on()`, `emit()` и `once()` для управления обработкой событий.
// Это делает его отличным инструментом для создания асинхронных и событийных систем в приложениях Node.js.
