// Глава 10: Модуль events - Запись в файл с помощью EventEmitter в Node.js

// В Node.js модуль `events` предоставляет механизм для работы с событиями.
// Он позволяет создавать собственные события и реагировать на них с помощью слушателей.
// В этом примере мы будем использовать `EventEmitter` для записи сообщений в файл.

// Как работает `EventEmitter`:
// `EventEmitter` - это класс, который позволяет создавать и управлять событиями.
// Вы можете определить собственные события, регистрировать обработчики событий и генерировать события, которые вызовут соответствующие обработчики.

// Пример использования `EventEmitter` для записи в файл:

const EventEmitter = require('events'); // Импортируем EventEmitter из модуля events
const fs = require('fs'); // Импортируем fs для работы с файловой системой

class FileLogger extends EventEmitter {
  constructor(filename) {
    super();
    this.filename = filename;

    // Регистрируем обработчик события 'log' для записи данных в файл
    this.on('log', (message) => {
      fs.appendFile(this.filename, `${message}\n`, (err) => {
        if (err) {
          console.error('Ошибка записи в файл:', err);
        } else {
          console.log('Сообщение записано в файл:', message);
        }
      });
    });
  }

  // Метод для генерации события 'log'
  log(message) {
    this.emit('log', message);
  }
}

// Создаем новый экземпляр FileLogger и передаем имя файла
const logger = new FileLogger('log.txt');

// Используем метод log для записи сообщений в файл
logger.log('Это первое сообщение');
logger.log('Это второе сообщение');
logger.log('Это третье сообщение');

// Итог:
// Модуль `events` позволяет создавать собственные события и управлять ими.
// Использование `EventEmitter` для записи в файл позволяет легко обрабатывать и записывать данные в файл по мере их поступления.
// В этом примере мы создали класс `FileLogger`, который расширяет `EventEmitter` и регистрирует обработчик события для записи сообщений в файл.
