// Глава 10: Модуль events

// Встроенный модуль events в Node.js предоставляет возможности для работы с событиями и подписчиками.
// Он реализует шаблон проектирования "Наблюдатель", где один объект (эмиттер событий) может уведомлять другие объекты (слушатели событий) о произошедших событиях.

// Как работают события:
// Модуль events позволяет создавать объекты-эмиттеры событий, которые могут генерировать события и управлять подписчиками на эти события.
// Вы можете добавлять слушатели к эмиттеру событий, вызывать события и удалять слушатели.

// Пример использования модуля events:
const EventEmitter = require('events');

// Создаем класс, который будет наследовать от EventEmitter
class MyEmitter extends EventEmitter {}

// Создаем экземпляр эмиттера
const myEmitter = new MyEmitter();

// Добавляем слушателя для события 'event'
myEmitter.on('event', () => {
  console.log('Событие "event" произошло!');
});

// Вызываем событие 'event'
myEmitter.emit('event'); // Выведет: Событие "event" произошло!

// Обработка событий с передачей данных:
myEmitter.on('data', (data) => {
  console.log('Получены данные:', data);
});

myEmitter.emit('data', { name: 'John', age: 30 });
// Выведет: Получены данные: { name: 'John', age: 30 }

// Использование метода once для однократной обработки событий:
myEmitter.once('singleEvent', () => {
  console.log('Событие "singleEvent" произошло один раз!');
});

myEmitter.emit('singleEvent'); // Выведет: Событие "singleEvent" произошло один раз!
myEmitter.emit('singleEvent'); // Не выведет ничего, так как слушатель был удален после первого вызова

// Итог:
// Модуль events предоставляет мощный механизм для работы с событиями в Node.js.
// Используйте его для создания объектов-эмиттеров событий, добавления и удаления слушателей, а также для обработки событий с передачей данных.
// Это позволяет эффективно организовывать асинхронное взаимодействие между различными частями приложения.
