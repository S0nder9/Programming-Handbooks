// Глава 10: Модуль events - Регистрация слушателя в конструкторе в Node.js

// В Node.js модуль events предоставляет интерфейс для работы с событиями.
// Класс EventEmitter используется для создания объектов, которые могут испускать события и обрабатывать их с помощью слушателей событий.

// Регистрация слушателя в конструкторе:
// Обычно слушатели событий регистрируются в конструкторе класса, чтобы гарантировать, что они будут активированы при создании экземпляра класса.

// Пример использования EventEmitter и регистрации слушателя в конструкторе:

const EventEmitter = require('events');

class MyEmitter extends EventEmitter {
  constructor() {
    super();
    // Регистрация слушателя события 'event' в конструкторе
    this.on('event', this.eventHandler);
  }

  // Обработчик события 'event'
  eventHandler() {
    console.log('Событие было обработано');
  }

  // Метод для вызова события 'event'
  triggerEvent() {
    this.emit('event');
  }
}

// Создание экземпляра класса MyEmitter
const myEmitter = new MyEmitter();

// Вызов события 'event'
myEmitter.triggerEvent(); // Выведет: Событие было обработано

// В этом примере:
// 1. Мы создаем класс MyEmitter, который наследует от EventEmitter.
// 2. В конструкторе класса MyEmitter регистрируем слушатель события 'event', который вызывает метод eventHandler.
// 3. Метод triggerEvent используется для вызова события 'event', что активирует все зарегистрированные слушатели.

// Итог:
// Регистрация слушателей в конструкторе обеспечивает их автоматическое подключение при создании экземпляра класса.
// Это удобный способ гарантировать, что все необходимые слушатели будут активированы и готовы обрабатывать события.
