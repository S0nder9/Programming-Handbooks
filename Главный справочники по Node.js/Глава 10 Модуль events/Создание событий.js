// Глава 10: Модуль events - Создание событий в Node.js

// В Node.js модуль events предоставляет возможность создавать, эмитировать и обрабатывать пользовательские события.
// Это позволяет создать гибкую систему обмена сообщениями внутри приложения, что особенно полезно в асинхронном программировании.

// Как работает модуль events:
// Модуль events экспортирует класс EventEmitter, который используется для создания и управления событиями.
// Экземпляры EventEmitter могут генерировать (эмитировать) события и регистрировать слушателей для обработки этих событий.

// Создание и использование событий:
// Для создания событий необходимо импортировать модуль events и создать экземпляр EventEmitter.

// Пример создания события:
const EventEmitter = require('events');
const eventEmitter = new EventEmitter();

// Регистрация слушателя события:
eventEmitter.on('greet', () => {
  console.log('Hello, world!');
});

// Эмитирование события:
eventEmitter.emit('greet'); // Выведет: Hello, world!

// Использование аргументов в событиях:
// События могут передавать данные слушателям в виде аргументов.

// Пример использования аргументов в событиях:
eventEmitter.on('sayHello', (name) => {
  console.log(`Hello, ${name}!`);
});

eventEmitter.emit('sayHello', 'Alice'); // Выведет: Hello, Alice!

// Удаление слушателей событий:
// Можно удалить зарегистрированных слушателей с помощью методов off и removeAllListeners.

// Пример удаления слушателя события:
const farewellListener = (name) => {
  console.log(`Goodbye, ${name}!`);
};

eventEmitter.on('farewell', farewellListener);
eventEmitter.emit('farewell', 'Bob'); // Выведет: Goodbye, Bob!

eventEmitter.off('farewell', farewellListener);
eventEmitter.emit('farewell', 'Bob'); // Ничего не выведет, так как слушатель был удален

// Итог:
// Модуль events в Node.js предоставляет мощные возможности для создания и управления пользовательскими событиями.
// Это позволяет организовать асинхронное взаимодействие между различными частями приложения, обеспечивая гибкость и удобство в разработке.
