// Глава 8: React Advanced - Правила хуков

// Правила хуков
// Хуки (hooks) - это мощный инструмент в React, который позволяет использовать состояние и другие возможности React в функциональных компонентах.
// Однако, для правильной работы хуков существует несколько важных правил, которые необходимо соблюдать.

// Правило 1: Вызывайте хуки только на верхнем уровне
// Не вызывайте хуки внутри циклов, условий или вложенных функций. Это гарантирует, что хуки будут вызываться в одном и том же порядке при каждом рендере компонента.
// Неправильное использование хуков может привести к непредсказуемому поведению и ошибкам.

import React, { useState, useEffect } from 'react';

const MyComponent = () => {
  // Корректное использование хука useState на верхнем уровне компонента
  const [count, setCount] = useState(0);

  // Корректное использование хука useEffect на верхнем уровне компонента
  useEffect(() => {
    document.title = `Вы нажали ${count} раз`;
  }, [count]);

  return (
    <div>
      <p>Вы нажали {count} раз</p>
      <button onClick={() => setCount(count + 1)}>Нажми меня</button>
    </div>
  );
};

// Правило 2: Вызывайте хуки только из функциональных компонентов или из кастомных хуков
// Не вызывайте хуки из обычных JavaScript функций. Хуки предназначены для использования внутри функциональных компонентов или других хуков.

const useCustomHook = () => {
  const [value, setValue] = useState('initial');
  
  useEffect(() => {
    console.log('Custom hook effect');
  }, [value]);
  
  return [value, setValue];
};

const AnotherComponent = () => {
  // Корректное использование кастомного хука
  const [customValue, setCustomValue] = useCustomHook();

  return (
    <div>
      <p>Значение из кастомного хука: {customValue}</p>
      <button onClick={() => setCustomValue('new value')}>Изменить значение</button>
    </div>
  );
};

// Актуально ли
// Соблюдение правил хуков актуально и обязательно для корректной работы приложений на React. Это помогает избежать ошибок и обеспечивает предсказуемое поведение компонентов.

// Итог
// Хуки предоставляют мощные возможности для управления состоянием и побочными эффектами в функциональных компонентах.
// Соблюдение правил хуков - это необходимое условие для их правильного использования и эффективной работы ваших React-приложений.

export { MyComponent, AnotherComponent };
