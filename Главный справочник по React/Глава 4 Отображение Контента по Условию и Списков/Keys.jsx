// Глава 4: Отображение Контента по Условию и Списков

// Keys - это специальный атрибут в React, который помогает библиотеке
// оптимально обновлять интерфейс при изменении списка элементов.

// Начнем с отображения контента по условию.
// В React можно использовать условные операторы, например, if или тернарный оператор,
// для рендеринга различного контента в зависимости от условия.

// Пример с использованием if:
const Component1 = ({ isLoggedIn }) => {
  if (isLoggedIn) {
    return <UserGreeting />;
  }
  return <GuestGreeting />;
};

// Пример с использованием тернарного оператора:
const Component2 = ({ isLoggedIn }) => (
  isLoggedIn ? <UserGreeting /> : <GuestGreeting />
);

// Теперь перейдем к отображению списков.
// В React для отображения списков элементов используется метод map(),
// который преобразует каждый элемент списка в React-элемент.

// Пример отображения списка элементов:
const ListComponent = ({ items }) => (
  <ul>
    {items.map(item => (
      <li key={item.id}>{item.text}</li>
    ))}
  </ul>
);

// Обратите внимание на атрибут key, который используется для уникальной идентификации
// каждого элемента списка. Это помогает React оптимально управлять списками
// и избежать лишних перерисовок при изменении элементов.

// Таким образом, Keys играют важную роль в React, особенно при работе с динамическими списками.
