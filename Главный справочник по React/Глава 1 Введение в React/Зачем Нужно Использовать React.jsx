// Глава 1: Введение в React

// Зачем нужно использовать React?
// React - это библиотека JavaScript для создания пользовательских интерфейсов.
// Он позволяет разработчикам строить масштабируемые веб-приложения с помощью компонентов.
// Ниже приведены некоторые преимущества использования React:

// 1. Компонентный подход: React использует компонентный подход, позволяя разбивать пользовательский интерфейс на множество независимых компонентов. Это упрощает разработку, тестирование и поддержку приложений.

// 2. Виртуальный DOM: React использует виртуальный DOM для эффективного управления обновлением пользовательского интерфейса. Он обновляет только те части DOM, которые действительно изменились, что улучшает производительность приложений.

// 3. Однонаправленный поток данных: React пропагандирует однонаправленный поток данных, что делает код более предсказуемым и легким для отладки.

// 4. Широкое распространение и поддержка: React - одна из самых популярных библиотек для разработки веб-приложений, и ее активно поддерживает сообщество разработчиков.

// 5. Расширяемость: React предоставляет множество инструментов и библиотек для улучшения разработки, таких как React Router для маршрутизации, Redux для управления состоянием и многие другие.

// Пример использования React:
import React from 'react';
import ReactDOM from 'react-dom';

// Создаем простой компонент
function App() {
  return (
    <div>
      <h1>Привет, мир!</h1>
      <p>Это пример приложения на React.</p>
    </div>
  );
}

// Рендерим компонент в корневом элементе DOM
ReactDOM.render(<App />, document.getElementById('root'));
