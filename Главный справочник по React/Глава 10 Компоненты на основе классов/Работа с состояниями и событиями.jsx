// Глава 10: Компоненты на основе классов

// Введение
// В React есть два способа работы с состоянием и событиями: с использованием функциональных компонентов и хуков, или с использованием классовых компонентов.
// В этой главе мы рассмотрим, как работать с состоянием и событиями с использованием классовых компонентов.

import React, { Component } from 'react';

// Классовые компоненты
// Классовые компоненты в React позволяют нам использовать состояние и обрабатывать события, что может быть полезно для более сложной логики компонентов.

class Counter extends Component {
  // Создание состояния в классовом компоненте
  constructor(props) {
    super(props);
    // Инициализация состояния
    this.state = {
      count: 0
    };
  }

  // Обработчик события для увеличения счетчика
  increment = () => {
    // Обновление состояния с использованием метода setState
    this.setState((prevState) => ({
      count: prevState.count + 1
    }));
  }

  // Обработчик события для уменьшения счетчика
  decrement = () => {
    // Обновление состояния с использованием метода setState
    this.setState((prevState) => ({
      count: prevState.count - 1
    }));
  }

  // Обработчик события для сброса счетчика
  reset = () => {
    // Установка начального значения состояния
    this.setState({
      count: 0
    });
  }

  // Метод render для отображения компонента
  render() {
    return (
      <div>
        <p>Счетчик: {this.state.count}</p>
        <button onClick={this.increment}>Увеличить</button>
        <button onClick={this.decrement}>Уменьшить</button>
        <button onClick={this.reset}>Сбросить</button>
      </div>
    );
  }
}

// Итог
// Классовые компоненты предоставляют мощные возможности для работы с состоянием и событиями в React.
// Несмотря на то, что функциональные компоненты и хуки становятся все более популярными, классовые компоненты остаются важной частью экосистемы React и используются во многих существующих приложениях.

export default Counter;
