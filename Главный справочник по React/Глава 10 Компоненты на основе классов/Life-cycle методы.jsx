// Глава 10: Компоненты на основе классов

// Методы жизненного цикла в классах React
// В классах React существуют специальные методы, называемые методами жизненного цикла, которые позволяют вам управлять поведением компонентов на различных этапах их существования.
// Эти методы могут быть разделены на три основные категории: методы монтирования, методы обновления и методы размонтирования.

import React, { Component } from 'react';

// Монтирование
// Методы монтирования вызываются при создании и вставке компонента в DOM.
// В эту категорию входят следующие методы:

// constructor()
// Метод constructor() вызывается до монтирования компонента. Он используется для инициализации состояния и привязки методов.
class LifeCycleDemo extends Component {
  constructor(props) {
    super(props);
    this.state = {
      count: 0
    };
    console.log('constructor');
  }

  // componentDidMount()

  
  // Метод componentDidMount() вызывается сразу после монтирования компонента. Это хорошее место для выполнения запросов к API и других операций, требующих завершения монтирования.
  componentDidMount() {
    console.log('componentDidMount');
  }

  // Обновление
  // Методы обновления вызываются, когда компонент получает новые пропсы или состояние изменяется.
  // В эту категорию входят следующие методы:

  // shouldComponentUpdate()


  // Метод shouldComponentUpdate() позволяет вам оптимизировать производительность, контролируя, должен ли компонент обновляться или нет.
  shouldComponentUpdate(nextProps, nextState) {
    console.log('shouldComponentUpdate');
    return true; // Возвращает true для продолжения обновления
  }

  // componentDidUpdate()

  // Метод componentDidUpdate() вызывается сразу после обновления компонента. Он полезен для выполнения действий на основе обновленных пропсов или состояния.
  componentDidUpdate(prevProps, prevState) {
    console.log('componentDidUpdate');
  }

  // Размонтирование
  // Методы размонтирования вызываются, когда компонент удаляется из DOM.
  // В эту категорию входит следующий метод:

  // componentWillUnmount()
  // Метод componentWillUnmount() вызывается перед удалением компонента из DOM. Это хорошее место для очистки ресурсов, таких как таймеры или отмена сетевых запросов.
  componentWillUnmount() {
    console.log('componentWillUnmount');
  }

  // Метод render()
  // Метод render() является обязательным и используется для описания того, что должно быть отображено на экране.
  render() {
    console.log('render');
    return (
      <div>
        <p>Счетчик: {this.state.count}</p>
        <button onClick={() => this.setState({ count: this.state.count + 1 })}>
          Увеличить
        </button>
      </div>
    );
  }
}

// Итог
// Методы жизненного цикла в классах React предоставляют мощные инструменты для управления поведением компонентов на различных этапах их существования.
// Понимание и правильное использование этих методов позволяет создавать более эффективные и управляемые компоненты.

export default LifeCycleDemo;
