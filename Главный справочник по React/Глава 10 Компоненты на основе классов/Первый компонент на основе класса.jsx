// Глава 10: Компоненты на основе классов

// Первый компонент на основе класса

// Компоненты на основе класса были основным способом создания компонентов в React до появления функциональных компонентов с хуками.
// Компоненты на основе класса позволяют использовать состояние (state) и методы жизненного цикла (lifecycle methods).

// Как создается компонент на основе класса?
// Компонент на основе класса создается с помощью ключевого слова class и наследуется от React.Component.
// В классе должен быть определен метод render, который возвращает JSX-разметку.

import React, { Component } from 'react';

// Определение компонента на основе класса
class MyFirstClassComponent extends Component {
  // Инициализация состояния в конструкторе
  constructor(props) {
    super(props);
    this.state = {
      count: 0
    };
  }

  // Метод для увеличения счетчика
  incrementCount = () => {
    this.setState((prevState) => ({
      count: prevState.count + 1
    }));
  };

  // Метод render для отображения JSX-разметки
  render() {
    return (
      <div>
        <p>Счетчик: {this.state.count}</p>
        <button onClick={this.incrementCount}>Увеличить</button>
      </div>
    );
  }
}

// Где используется?
// Компоненты на основе класса используются везде, где необходимо управлять состоянием или использовать методы жизненного цикла.
// Они могут быть полезны в более сложных компонентах, где функциональные компоненты могут быть менее удобными.

export default MyFirstClassComponent;

// Итог
// Компоненты на основе класса - это мощный инструмент для создания компонентов в React, особенно когда требуется использовать состояние или методы жизненного цикла.
// Несмотря на то, что функциональные компоненты с хуками становятся все более популярными, компоненты на основе класса по-прежнему актуальны и используются в крупных кодовых базах.
