// Глава 1: Введение в Three.js - Что такое Three.js

// Three.js - это библиотека JavaScript, которая позволяет создавать и отображать анимации и трехмерную графику в веб-браузерах.
// Она построена на основе WebGL (Web Graphics Library), которая является низкоуровневым API для рендеринга 2D и 3D графики.

// Зачем использовать Three.js:
// Three.js упрощает работу с WebGL, предоставляя более высокоуровневый API для создания сложных 3D сцен, моделей и анимаций.
// Она включает в себя множество функций и утилит для работы с камерами, освещением, геометрией, материалами и текстурами.

// Основные компоненты Three.js:

// 1. Сцена (Scene):
// Сцена является контейнером для всех объектов, которые вы хотите отобразить.
// Она содержит геометрию, свет, камеру и другие объекты.

const scene = new THREE.Scene();

// 2. Камера (Camera):
// Камера определяет точку обзора для рендеринга сцены.
// Three.js поддерживает несколько типов камер, включая перспективные и ортографические камеры.

const camera = new THREE.PerspectiveCamera(
  75, // угол обзора
  window.innerWidth / window.innerHeight, // соотношение сторон
  0.1, // ближняя плоскость отсечения
  1000 // дальняя плоскость отсечения
);

camera.position.z = 5; // установка позиции камеры

// 3. Рендерер (Renderer):
// Рендерер отвечает за отображение сцены с точки зрения камеры.
// В большинстве случаев используется WebGLRenderer.

const renderer = new THREE.WebGLRenderer();
renderer.setSize(window.innerWidth, window.innerHeight);
document.body.appendChild(renderer.domElement);

// 4. Геометрия (Geometry) и Материалы (Materials):
// Геометрия определяет форму объекта, а материалы определяют, как объект будет отображаться (цвет, текстуры и т.д.).

const geometry = new THREE.BoxGeometry(); // создание куба
const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 }); // материал с зеленым цветом
const cube = new THREE.Mesh(geometry, material); // создание сетки (mesh) из геометрии и материала
scene.add(cube); // добавление куба в сцену

// 5. Анимация:
// Для создания анимации используется функция render, которая обновляет сцену и перерисовывает ее в цикле.

function animate() {
  requestAnimationFrame(animate);

  // вращение куба
  cube.rotation.x += 0.01;
  cube.rotation.y += 0.01;

  renderer.render(scene, camera);
}

animate(); // запуск анимации

// Итог:
// Three.js предоставляет мощные инструменты для работы с 3D графикой в веб-браузере.
// С помощью Three.js можно создавать интерактивные 3D сцены, игры и визуализации, упрощая работу с WebGL.
